?   	github.com/relvox/iridescence_go/asserts/sadistics	[no test files]
?   	github.com/relvox/iridescence_go/clients	[no test files]
?   	github.com/relvox/iridescence_go/experimental/ebiten/ebihelpers	[no test files]
=== RUN   TestSameElements
=== RUN   TestSameElements/Same_elements,_same_order
=== RUN   TestSameElements/Same_elements,_different_order
=== RUN   TestSameElements/Not_same_sizes
=== RUN   TestSameElements/Different_elements
--- PASS: TestSameElements (0.00s)
    --- PASS: TestSameElements/Same_elements,_same_order (0.00s)
    --- PASS: TestSameElements/Same_elements,_different_order (0.00s)
    --- PASS: TestSameElements/Not_same_sizes (0.00s)
    --- PASS: TestSameElements/Different_elements (0.00s)
=== RUN   TestSameKeyValues
=== RUN   TestSameKeyValues/Same_key-value_pairs,_same_order
=== RUN   TestSameKeyValues/Same_key-value_pairs,_different_order
=== RUN   TestSameKeyValues/Different_values
=== RUN   TestSameKeyValues/Missing_keys
=== RUN   TestSameKeyValues/Extra_keys
--- PASS: TestSameKeyValues (0.00s)
    --- PASS: TestSameKeyValues/Same_key-value_pairs,_same_order (0.00s)
    --- PASS: TestSameKeyValues/Same_key-value_pairs,_different_order (0.00s)
    --- PASS: TestSameKeyValues/Different_values (0.00s)
    --- PASS: TestSameKeyValues/Missing_keys (0.00s)
    --- PASS: TestSameKeyValues/Extra_keys (0.00s)
PASS
ok  	github.com/relvox/iridescence_go/asserts	(cached)
?   	github.com/relvox/iridescence_go/experimental/ebiten/ebiterm/sandbox	[no test files]
?   	github.com/relvox/iridescence_go/experimental/namegen	[no test files]
?   	github.com/relvox/iridescence_go/experimental/prototyping	[no test files]
?   	github.com/relvox/iridescence_go/files	[no test files]
testing: warning: no tests to run
PASS
ok  	github.com/relvox/iridescence_go/experimental/graph	(cached) [no tests to run]
=== RUN   Test_Append
--- PASS: Test_Append (0.00s)
=== RUN   Test_Rebuild
--- PASS: Test_Rebuild (0.03s)
=== RUN   Test_TypedQueries
=== RUN   Test_TypedQueries/typed_list
=== RUN   Test_TypedQueries/filtered_typed_list
=== RUN   Test_TypedQueries/insert_object
=== RUN   Test_TypedQueries/insert_objects
--- PASS: Test_TypedQueries (0.00s)
    --- PASS: Test_TypedQueries/typed_list (0.00s)
    --- PASS: Test_TypedQueries/filtered_typed_list (0.00s)
    --- PASS: Test_TypedQueries/insert_object (0.00s)
    --- PASS: Test_TypedQueries/insert_objects (0.00s)
PASS
ok  	github.com/relvox/iridescence_go/experimental/prolog	(cached)
testing: warning: no tests to run
PASS
ok  	github.com/relvox/iridescence_go/geom	(cached) [no tests to run]
?   	github.com/relvox/iridescence_go/handlers	[no test files]
?   	github.com/relvox/iridescence_go/logging	[no test files]
?   	github.com/relvox/iridescence_go/maths/advanced/intervals	[no test files]
?   	github.com/relvox/iridescence_go/maths/integer/intervals	[no test files]
=== RUN   TestMaxValue
=== RUN   TestMaxValue/Max_uint8
=== RUN   TestMaxValue/Max_uint16
=== RUN   TestMaxValue/Max_uint32
=== RUN   TestMaxValue/Max_uint64
=== RUN   TestMaxValue/Max_uint
=== RUN   TestMaxValue/Max_int8
=== RUN   TestMaxValue/Max_int16
=== RUN   TestMaxValue/Max_int32
=== RUN   TestMaxValue/Max_int64
=== RUN   TestMaxValue/Max_int
=== RUN   TestMaxValue/Max_float32
=== RUN   TestMaxValue/Max_float64
--- PASS: TestMaxValue (0.00s)
    --- PASS: TestMaxValue/Max_uint8 (0.00s)
    --- PASS: TestMaxValue/Max_uint16 (0.00s)
    --- PASS: TestMaxValue/Max_uint32 (0.00s)
    --- PASS: TestMaxValue/Max_uint64 (0.00s)
    --- PASS: TestMaxValue/Max_uint (0.00s)
    --- PASS: TestMaxValue/Max_int8 (0.00s)
    --- PASS: TestMaxValue/Max_int16 (0.00s)
    --- PASS: TestMaxValue/Max_int32 (0.00s)
    --- PASS: TestMaxValue/Max_int64 (0.00s)
    --- PASS: TestMaxValue/Max_int (0.00s)
    --- PASS: TestMaxValue/Max_float32 (0.00s)
    --- PASS: TestMaxValue/Max_float64 (0.00s)
=== RUN   TestMinValue
=== RUN   TestMinValue/Min_uint8
=== RUN   TestMinValue/Min_uint16
=== RUN   TestMinValue/Min_uint32
=== RUN   TestMinValue/Min_uint64
=== RUN   TestMinValue/Min_uint
=== RUN   TestMinValue/Min_int8
=== RUN   TestMinValue/Min_int16
=== RUN   TestMinValue/Min_int32
=== RUN   TestMinValue/Min_int64
=== RUN   TestMinValue/Min_int
=== RUN   TestMinValue/Min_float32
=== RUN   TestMinValue/Min_float64
--- PASS: TestMinValue (0.00s)
    --- PASS: TestMinValue/Min_uint8 (0.00s)
    --- PASS: TestMinValue/Min_uint16 (0.00s)
    --- PASS: TestMinValue/Min_uint32 (0.00s)
    --- PASS: TestMinValue/Min_uint64 (0.00s)
    --- PASS: TestMinValue/Min_uint (0.00s)
    --- PASS: TestMinValue/Min_int8 (0.00s)
    --- PASS: TestMinValue/Min_int16 (0.00s)
    --- PASS: TestMinValue/Min_int32 (0.00s)
    --- PASS: TestMinValue/Min_int64 (0.00s)
    --- PASS: TestMinValue/Min_int (0.00s)
    --- PASS: TestMinValue/Min_float32 (0.00s)
    --- PASS: TestMinValue/Min_float64 (0.00s)
=== RUN   Test_FOO
2024/01/17 12:27:28 |------||------||------||------||------||------||------||------|
2024/01/17 12:27:28 -0000000000000000000000000000000000000000000000000000000010000000
2024/01/17 12:27:28 -0000000000000000000000000000000000000000000000000000000010000000
2024/01/17 12:27:28 |------||------||------||------||------||------||------||------|
2024/01/17 12:27:28 -0000000000000000000000000000000000000000000000001000000000000000
2024/01/17 12:27:28 -0000000000000000000000000000000000000000000000001000000000000000
2024/01/17 12:27:28 |------||------||------||------||------||------||------||------|
2024/01/17 12:27:28 -0000000000000000000000000000000010000000000000000000000000000000
2024/01/17 12:27:28 -0000000000000000000000000000000010000000000000000000000000000000
2024/01/17 12:27:28 |------||------||------||------||------||------||------||------|
2024/01/17 12:27:28 -1000000000000000000000000000000000000000000000000000000000000000
2024/01/17 12:27:28 -1000000000000000000000000000000000000000000000000000000000000000
2024/01/17 12:27:28 |------||------||------||------||------||------||------||------|
2024/01/17 12:27:28 -1000000000000000000000000000000000000000000000000000000000000000
2024/01/17 12:27:28 -1000000000000000000000000000000000000000000000000000000000000000
2024/01/17 12:27:28 |------||------||------||------||------||------||------||------|
--- PASS: Test_FOO (0.01s)
PASS
ok  	github.com/relvox/iridescence_go/maths	(cached)
?   	github.com/relvox/iridescence_go/middleware	[no test files]
?   	github.com/relvox/iridescence_go/serialization	[no test files]
?   	github.com/relvox/iridescence_go/servers/sawmill	[no test files]
?   	github.com/relvox/iridescence_go/servers	[no test files]
?   	github.com/relvox/iridescence_go/text	[no test files]
?   	github.com/relvox/iridescence_go/tools/countula	[no test files]
?   	github.com/relvox/iridescence_go/tools/sawmill	[no test files]
=== RUN   Test_Difference
=== RUN   Test_Difference/0
=== RUN   Test_Difference/1
=== RUN   Test_Difference/2
=== RUN   Test_Difference/3
--- PASS: Test_Difference (0.00s)
    --- PASS: Test_Difference/0 (0.00s)
    --- PASS: Test_Difference/1 (0.00s)
    --- PASS: Test_Difference/2 (0.00s)
    --- PASS: Test_Difference/3 (0.00s)
=== RUN   Test_FindCover
=== RUN   Test_FindCover/Solver0/Test0
=== RUN   Test_FindCover/Solver1/Test0
=== RUN   Test_FindCover/Solver2/Test0
=== RUN   Test_FindCover/Solver3/Test0
=== RUN   Test_FindCover/Solver4/Test0
=== RUN   Test_FindCover/Solver0/Test1
=== RUN   Test_FindCover/Solver1/Test1
=== RUN   Test_FindCover/Solver2/Test1
=== RUN   Test_FindCover/Solver3/Test1
=== RUN   Test_FindCover/Solver4/Test1
=== RUN   Test_FindCover/Solver0/Test2
=== RUN   Test_FindCover/Solver1/Test2
=== RUN   Test_FindCover/Solver2/Test2
=== RUN   Test_FindCover/Solver3/Test2
=== RUN   Test_FindCover/Solver4/Test2
=== RUN   Test_FindCover/Solver0/Test3
=== RUN   Test_FindCover/Solver1/Test3
=== RUN   Test_FindCover/Solver2/Test3
=== RUN   Test_FindCover/Solver3/Test3
=== RUN   Test_FindCover/Solver4/Test3
=== RUN   Test_FindCover/Solver0/Test4
=== RUN   Test_FindCover/Solver1/Test4
=== RUN   Test_FindCover/Solver2/Test4
=== RUN   Test_FindCover/Solver3/Test4
=== RUN   Test_FindCover/Solver4/Test4
=== RUN   Test_FindCover/Solver0/Test5
=== RUN   Test_FindCover/Solver1/Test5
=== RUN   Test_FindCover/Solver2/Test5
=== RUN   Test_FindCover/Solver3/Test5
=== RUN   Test_FindCover/Solver4/Test5
=== RUN   Test_FindCover/Solver0/Test6
=== RUN   Test_FindCover/Solver1/Test6
=== RUN   Test_FindCover/Solver2/Test6
=== RUN   Test_FindCover/Solver3/Test6
=== RUN   Test_FindCover/Solver4/Test6
=== RUN   Test_FindCover/Solver0/Test7
=== RUN   Test_FindCover/Solver1/Test7
=== RUN   Test_FindCover/Solver2/Test7
=== RUN   Test_FindCover/Solver3/Test7
=== RUN   Test_FindCover/Solver4/Test7
=== RUN   Test_FindCover/Solver0/Test8
=== RUN   Test_FindCover/Solver1/Test8
=== RUN   Test_FindCover/Solver2/Test8
=== RUN   Test_FindCover/Solver3/Test8
=== RUN   Test_FindCover/Solver4/Test8
=== RUN   Test_FindCover/Solver0/Test9
=== RUN   Test_FindCover/Solver1/Test9
=== RUN   Test_FindCover/Solver2/Test9
=== RUN   Test_FindCover/Solver3/Test9
=== RUN   Test_FindCover/Solver4/Test9
=== RUN   Test_FindCover/Solver0/Test10
=== RUN   Test_FindCover/Solver1/Test10
=== RUN   Test_FindCover/Solver2/Test10
=== RUN   Test_FindCover/Solver3/Test10
=== RUN   Test_FindCover/Solver4/Test10
--- PASS: Test_FindCover (0.00s)
    --- PASS: Test_FindCover/Solver0/Test0 (0.00s)
    --- PASS: Test_FindCover/Solver1/Test0 (0.00s)
    --- PASS: Test_FindCover/Solver2/Test0 (0.00s)
    --- PASS: Test_FindCover/Solver3/Test0 (0.00s)
    --- PASS: Test_FindCover/Solver4/Test0 (0.00s)
    --- PASS: Test_FindCover/Solver0/Test1 (0.00s)
    --- PASS: Test_FindCover/Solver1/Test1 (0.00s)
    --- PASS: Test_FindCover/Solver2/Test1 (0.00s)
    --- PASS: Test_FindCover/Solver3/Test1 (0.00s)
    --- PASS: Test_FindCover/Solver4/Test1 (0.00s)
    --- PASS: Test_FindCover/Solver0/Test2 (0.00s)
    --- PASS: Test_FindCover/Solver1/Test2 (0.00s)
    --- PASS: Test_FindCover/Solver2/Test2 (0.00s)
    --- PASS: Test_FindCover/Solver3/Test2 (0.00s)
    --- PASS: Test_FindCover/Solver4/Test2 (0.00s)
    --- PASS: Test_FindCover/Solver0/Test3 (0.00s)
    --- PASS: Test_FindCover/Solver1/Test3 (0.00s)
    --- PASS: Test_FindCover/Solver2/Test3 (0.00s)
    --- PASS: Test_FindCover/Solver3/Test3 (0.00s)
    --- PASS: Test_FindCover/Solver4/Test3 (0.00s)
    --- PASS: Test_FindCover/Solver0/Test4 (0.00s)
    --- PASS: Test_FindCover/Solver1/Test4 (0.00s)
    --- PASS: Test_FindCover/Solver2/Test4 (0.00s)
    --- PASS: Test_FindCover/Solver3/Test4 (0.00s)
    --- PASS: Test_FindCover/Solver4/Test4 (0.00s)
    --- PASS: Test_FindCover/Solver0/Test5 (0.00s)
    --- PASS: Test_FindCover/Solver1/Test5 (0.00s)
    --- PASS: Test_FindCover/Solver2/Test5 (0.00s)
    --- PASS: Test_FindCover/Solver3/Test5 (0.00s)
    --- PASS: Test_FindCover/Solver4/Test5 (0.00s)
    --- PASS: Test_FindCover/Solver0/Test6 (0.00s)
    --- PASS: Test_FindCover/Solver1/Test6 (0.00s)
    --- PASS: Test_FindCover/Solver2/Test6 (0.00s)
    --- PASS: Test_FindCover/Solver3/Test6 (0.00s)
    --- PASS: Test_FindCover/Solver4/Test6 (0.00s)
    --- PASS: Test_FindCover/Solver0/Test7 (0.00s)
    --- PASS: Test_FindCover/Solver1/Test7 (0.00s)
    --- PASS: Test_FindCover/Solver2/Test7 (0.00s)
    --- PASS: Test_FindCover/Solver3/Test7 (0.00s)
    --- PASS: Test_FindCover/Solver4/Test7 (0.00s)
    --- PASS: Test_FindCover/Solver0/Test8 (0.00s)
    --- PASS: Test_FindCover/Solver1/Test8 (0.00s)
    --- PASS: Test_FindCover/Solver2/Test8 (0.00s)
    --- PASS: Test_FindCover/Solver3/Test8 (0.00s)
    --- PASS: Test_FindCover/Solver4/Test8 (0.00s)
    --- PASS: Test_FindCover/Solver0/Test9 (0.00s)
    --- PASS: Test_FindCover/Solver1/Test9 (0.00s)
    --- PASS: Test_FindCover/Solver2/Test9 (0.00s)
    --- PASS: Test_FindCover/Solver3/Test9 (0.00s)
    --- PASS: Test_FindCover/Solver4/Test9 (0.00s)
    --- PASS: Test_FindCover/Solver0/Test10 (0.00s)
    --- PASS: Test_FindCover/Solver1/Test10 (0.00s)
    --- PASS: Test_FindCover/Solver2/Test10 (0.00s)
    --- PASS: Test_FindCover/Solver3/Test10 (0.00s)
    --- PASS: Test_FindCover/Solver4/Test10 (0.00s)
=== RUN   Test_FindCover_Group
=== RUN   Test_FindCover_Group/n=1/ChallengingGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=1/ChallengingGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=1/ChallengingGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=1/ChallengingGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=1/ChallengingGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=1/ChallengingGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=1/ChallengingGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=1/ChallengingGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=1/ChallengingGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=1/ChallengingGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=1/RandomBlobGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=1/RandomBlobGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=1/RandomBlobGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=1/RandomBlobGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=1/RandomBlobGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=1/RandomBlobGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=1/RandomBlobGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=1/RandomBlobGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=1/RandomBlobGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=1/RandomBlobGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=1/AlternatingSizeGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=1/AlternatingSizeGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=1/AlternatingSizeGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=1/AlternatingSizeGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=1/AlternatingSizeGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=1/AlternatingSizeGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=1/AlternatingSizeGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=1/AlternatingSizeGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=1/AlternatingSizeGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=1/AlternatingSizeGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=1/DenseOverlappingGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=1/DenseOverlappingGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=1/DenseOverlappingGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=1/DenseOverlappingGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=1/DenseOverlappingGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=1/DenseOverlappingGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=1/DenseOverlappingGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=1/DenseOverlappingGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=1/DenseOverlappingGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=1/DenseOverlappingGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=1/SparseGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=1/SparseGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=1/SparseGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=1/SparseGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=1/SparseGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=1/SparseGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=1/SparseGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=1/SparseGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=1/SparseGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=1/SparseGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=10/ChallengingGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=10/ChallengingGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=10/ChallengingGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=10/ChallengingGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=10/ChallengingGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=10/ChallengingGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=10/ChallengingGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=10/ChallengingGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=10/ChallengingGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=10/ChallengingGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=10/RandomBlobGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=10/RandomBlobGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=10/RandomBlobGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=10/RandomBlobGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=10/RandomBlobGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=10/RandomBlobGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=10/RandomBlobGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=10/RandomBlobGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=10/RandomBlobGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=10/RandomBlobGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=10/AlternatingSizeGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=10/AlternatingSizeGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=10/AlternatingSizeGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=10/AlternatingSizeGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=10/AlternatingSizeGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=10/AlternatingSizeGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=10/AlternatingSizeGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=10/AlternatingSizeGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=10/AlternatingSizeGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=10/AlternatingSizeGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=10/DenseOverlappingGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=10/DenseOverlappingGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=10/DenseOverlappingGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=10/DenseOverlappingGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=10/DenseOverlappingGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=10/DenseOverlappingGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=10/DenseOverlappingGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=10/DenseOverlappingGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=10/DenseOverlappingGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=10/DenseOverlappingGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=10/SparseGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=10/SparseGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=10/SparseGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=10/SparseGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=10/SparseGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=10/SparseGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=10/SparseGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=10/SparseGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=10/SparseGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=10/SparseGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=100/ChallengingGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=100/ChallengingGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=100/ChallengingGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=100/ChallengingGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=100/ChallengingGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=100/ChallengingGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=100/ChallengingGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=100/ChallengingGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=100/ChallengingGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=100/ChallengingGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=100/RandomBlobGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=100/RandomBlobGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=100/RandomBlobGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=100/RandomBlobGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=100/RandomBlobGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=100/RandomBlobGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=100/RandomBlobGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=100/RandomBlobGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=100/RandomBlobGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=100/RandomBlobGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=100/AlternatingSizeGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=100/AlternatingSizeGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=100/AlternatingSizeGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=100/AlternatingSizeGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=100/AlternatingSizeGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=100/AlternatingSizeGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=100/AlternatingSizeGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=100/AlternatingSizeGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=100/AlternatingSizeGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=100/AlternatingSizeGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=100/DenseOverlappingGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=100/DenseOverlappingGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=100/DenseOverlappingGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=100/DenseOverlappingGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=100/DenseOverlappingGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=100/DenseOverlappingGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=100/DenseOverlappingGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=100/DenseOverlappingGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=100/DenseOverlappingGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=100/DenseOverlappingGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=100/SparseGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=100/SparseGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=100/SparseGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=100/SparseGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=100/SparseGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=100/SparseGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=100/SparseGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=100/SparseGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=100/SparseGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=100/SparseGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=1000/ChallengingGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=1000/ChallengingGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=1000/ChallengingGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=1000/ChallengingGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=1000/ChallengingGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=1000/ChallengingGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=1000/ChallengingGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=1000/ChallengingGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=1000/ChallengingGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=1000/ChallengingGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=1000/RandomBlobGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=1000/RandomBlobGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=1000/RandomBlobGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=1000/RandomBlobGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=1000/RandomBlobGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=1000/RandomBlobGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=1000/RandomBlobGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=1000/RandomBlobGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=1000/RandomBlobGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=1000/RandomBlobGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=1000/AlternatingSizeGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=1000/AlternatingSizeGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=1000/AlternatingSizeGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=1000/AlternatingSizeGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=1000/AlternatingSizeGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=1000/AlternatingSizeGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=1000/AlternatingSizeGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=1000/AlternatingSizeGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=1000/AlternatingSizeGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=1000/AlternatingSizeGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=1000/DenseOverlappingGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=1000/DenseOverlappingGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=1000/DenseOverlappingGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=1000/DenseOverlappingGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=1000/DenseOverlappingGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=1000/DenseOverlappingGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=1000/DenseOverlappingGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=1000/DenseOverlappingGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=1000/DenseOverlappingGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=1000/DenseOverlappingGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=1000/SparseGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=1000/SparseGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=1000/SparseGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=1000/SparseGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=1000/SparseGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=1000/SparseGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=1000/SparseGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=1000/SparseGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=1000/SparseGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=1000/SparseGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=10000/ChallengingGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=10000/ChallengingGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=10000/ChallengingGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=10000/ChallengingGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=10000/ChallengingGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=10000/ChallengingGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=10000/ChallengingGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=10000/ChallengingGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=10000/ChallengingGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=10000/ChallengingGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=10000/RandomBlobGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=10000/RandomBlobGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=10000/RandomBlobGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=10000/RandomBlobGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=10000/RandomBlobGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=10000/RandomBlobGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=10000/RandomBlobGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=10000/RandomBlobGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=10000/RandomBlobGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=10000/RandomBlobGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=10000/AlternatingSizeGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=10000/AlternatingSizeGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=10000/AlternatingSizeGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=10000/AlternatingSizeGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=10000/AlternatingSizeGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=10000/AlternatingSizeGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=10000/AlternatingSizeGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=10000/AlternatingSizeGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=10000/AlternatingSizeGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=10000/AlternatingSizeGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=10000/DenseOverlappingGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=10000/DenseOverlappingGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=10000/DenseOverlappingGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=10000/DenseOverlappingGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=10000/DenseOverlappingGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=10000/DenseOverlappingGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=10000/DenseOverlappingGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=10000/DenseOverlappingGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=10000/DenseOverlappingGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=10000/DenseOverlappingGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=10000/SparseGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=10000/SparseGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=10000/SparseGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=10000/SparseGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=10000/SparseGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=10000/SparseGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=10000/SparseGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=10000/SparseGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=10000/SparseGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=10000/SparseGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=100000/ChallengingGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=100000/ChallengingGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=100000/ChallengingGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=100000/ChallengingGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=100000/ChallengingGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=100000/ChallengingGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=100000/ChallengingGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=100000/ChallengingGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=100000/ChallengingGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=100000/ChallengingGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=100000/RandomBlobGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=100000/RandomBlobGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=100000/RandomBlobGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=100000/RandomBlobGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=100000/RandomBlobGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=100000/RandomBlobGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=100000/RandomBlobGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=100000/RandomBlobGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=100000/RandomBlobGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=100000/RandomBlobGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=100000/AlternatingSizeGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=100000/AlternatingSizeGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=100000/AlternatingSizeGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=100000/AlternatingSizeGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=100000/AlternatingSizeGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=100000/AlternatingSizeGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=100000/AlternatingSizeGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=100000/AlternatingSizeGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=100000/AlternatingSizeGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=100000/AlternatingSizeGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=100000/DenseOverlappingGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=100000/DenseOverlappingGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=100000/DenseOverlappingGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=100000/DenseOverlappingGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=100000/DenseOverlappingGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=100000/DenseOverlappingGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=100000/DenseOverlappingGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=100000/DenseOverlappingGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=100000/DenseOverlappingGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=100000/DenseOverlappingGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=100000/SparseGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=100000/SparseGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=100000/SparseGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=100000/SparseGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=100000/SparseGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=100000/SparseGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=100000/SparseGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=100000/SparseGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=100000/SparseGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=100000/SparseGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=1000000/ChallengingGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=1000000/ChallengingGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=1000000/ChallengingGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=1000000/ChallengingGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=1000000/ChallengingGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=1000000/ChallengingGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=1000000/ChallengingGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=1000000/ChallengingGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=1000000/ChallengingGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=1000000/ChallengingGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=1000000/RandomBlobGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=1000000/RandomBlobGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=1000000/RandomBlobGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=1000000/RandomBlobGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=1000000/RandomBlobGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=1000000/RandomBlobGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=1000000/RandomBlobGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=1000000/RandomBlobGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=1000000/RandomBlobGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=1000000/RandomBlobGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=1000000/AlternatingSizeGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=1000000/AlternatingSizeGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=1000000/AlternatingSizeGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=1000000/AlternatingSizeGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=1000000/AlternatingSizeGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=1000000/AlternatingSizeGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=1000000/AlternatingSizeGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=1000000/AlternatingSizeGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=1000000/AlternatingSizeGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=1000000/AlternatingSizeGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=1000000/DenseOverlappingGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=1000000/DenseOverlappingGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=1000000/DenseOverlappingGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=1000000/DenseOverlappingGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=1000000/DenseOverlappingGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=1000000/DenseOverlappingGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=1000000/DenseOverlappingGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=1000000/DenseOverlappingGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=1000000/DenseOverlappingGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=1000000/DenseOverlappingGen/Solver_3_4
=== RUN   Test_FindCover_Group/n=1000000/SparseGen/Solver_0_1
=== RUN   Test_FindCover_Group/n=1000000/SparseGen/Solver_0_2
=== RUN   Test_FindCover_Group/n=1000000/SparseGen/Solver_0_3
=== RUN   Test_FindCover_Group/n=1000000/SparseGen/Solver_0_4
=== RUN   Test_FindCover_Group/n=1000000/SparseGen/Solver_1_2
=== RUN   Test_FindCover_Group/n=1000000/SparseGen/Solver_1_3
=== RUN   Test_FindCover_Group/n=1000000/SparseGen/Solver_1_4
=== RUN   Test_FindCover_Group/n=1000000/SparseGen/Solver_2_3
=== RUN   Test_FindCover_Group/n=1000000/SparseGen/Solver_2_4
=== RUN   Test_FindCover_Group/n=1000000/SparseGen/Solver_3_4
--- PASS: Test_FindCover_Group (4.11s)
    --- PASS: Test_FindCover_Group/n=1/ChallengingGen/Solver_0_1 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/ChallengingGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/ChallengingGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/ChallengingGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/ChallengingGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/ChallengingGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/ChallengingGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/ChallengingGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/ChallengingGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/ChallengingGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/RandomBlobGen/Solver_0_1 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/RandomBlobGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/RandomBlobGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/RandomBlobGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/RandomBlobGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/RandomBlobGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/RandomBlobGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/RandomBlobGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/RandomBlobGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/RandomBlobGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/AlternatingSizeGen/Solver_0_1 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/AlternatingSizeGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/AlternatingSizeGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/AlternatingSizeGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/AlternatingSizeGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/AlternatingSizeGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/AlternatingSizeGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/AlternatingSizeGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/AlternatingSizeGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/AlternatingSizeGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/DenseOverlappingGen/Solver_0_1 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/DenseOverlappingGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/DenseOverlappingGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/DenseOverlappingGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/DenseOverlappingGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/DenseOverlappingGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/DenseOverlappingGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/DenseOverlappingGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/DenseOverlappingGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/DenseOverlappingGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/SparseGen/Solver_0_1 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/SparseGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/SparseGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/SparseGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/SparseGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/SparseGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/SparseGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/SparseGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/SparseGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1/SparseGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/ChallengingGen/Solver_0_1 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/ChallengingGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/ChallengingGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/ChallengingGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/ChallengingGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/ChallengingGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/ChallengingGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/ChallengingGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/ChallengingGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/ChallengingGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/RandomBlobGen/Solver_0_1 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/RandomBlobGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/RandomBlobGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/RandomBlobGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/RandomBlobGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/RandomBlobGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/RandomBlobGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/RandomBlobGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/RandomBlobGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/RandomBlobGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/AlternatingSizeGen/Solver_0_1 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/AlternatingSizeGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/AlternatingSizeGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/AlternatingSizeGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/AlternatingSizeGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/AlternatingSizeGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/AlternatingSizeGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/AlternatingSizeGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/AlternatingSizeGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/AlternatingSizeGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/DenseOverlappingGen/Solver_0_1 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/DenseOverlappingGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/DenseOverlappingGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/DenseOverlappingGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/DenseOverlappingGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/DenseOverlappingGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/DenseOverlappingGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/DenseOverlappingGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/DenseOverlappingGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/DenseOverlappingGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/SparseGen/Solver_0_1 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/SparseGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/SparseGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/SparseGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/SparseGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/SparseGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/SparseGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/SparseGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/SparseGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10/SparseGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/ChallengingGen/Solver_0_1 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/ChallengingGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/ChallengingGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/ChallengingGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/ChallengingGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/ChallengingGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/ChallengingGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/ChallengingGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/ChallengingGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/ChallengingGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/RandomBlobGen/Solver_0_1 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/RandomBlobGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/RandomBlobGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/RandomBlobGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/RandomBlobGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/RandomBlobGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/RandomBlobGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/RandomBlobGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/RandomBlobGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/RandomBlobGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/AlternatingSizeGen/Solver_0_1 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/AlternatingSizeGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/AlternatingSizeGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/AlternatingSizeGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/AlternatingSizeGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/AlternatingSizeGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/AlternatingSizeGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/AlternatingSizeGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/AlternatingSizeGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/AlternatingSizeGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/DenseOverlappingGen/Solver_0_1 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/DenseOverlappingGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/DenseOverlappingGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/DenseOverlappingGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/DenseOverlappingGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/DenseOverlappingGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/DenseOverlappingGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/DenseOverlappingGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/DenseOverlappingGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/DenseOverlappingGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/SparseGen/Solver_0_1 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/SparseGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/SparseGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/SparseGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/SparseGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/SparseGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/SparseGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/SparseGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/SparseGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100/SparseGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/ChallengingGen/Solver_0_1 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/ChallengingGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/ChallengingGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/ChallengingGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/ChallengingGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/ChallengingGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/ChallengingGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/ChallengingGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/ChallengingGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/ChallengingGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/RandomBlobGen/Solver_0_1 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/RandomBlobGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/RandomBlobGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/RandomBlobGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/RandomBlobGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/RandomBlobGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/RandomBlobGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/RandomBlobGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/RandomBlobGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/RandomBlobGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/AlternatingSizeGen/Solver_0_1 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/AlternatingSizeGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/AlternatingSizeGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/AlternatingSizeGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/AlternatingSizeGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/AlternatingSizeGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/AlternatingSizeGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/AlternatingSizeGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/AlternatingSizeGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/AlternatingSizeGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/DenseOverlappingGen/Solver_0_1 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/DenseOverlappingGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/DenseOverlappingGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/DenseOverlappingGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/DenseOverlappingGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/DenseOverlappingGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/DenseOverlappingGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/DenseOverlappingGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/DenseOverlappingGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/DenseOverlappingGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/SparseGen/Solver_0_1 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/SparseGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/SparseGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/SparseGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/SparseGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/SparseGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/SparseGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/SparseGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/SparseGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000/SparseGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/ChallengingGen/Solver_0_1 (0.08s)
    --- PASS: Test_FindCover_Group/n=10000/ChallengingGen/Solver_0_2 (0.01s)
    --- PASS: Test_FindCover_Group/n=10000/ChallengingGen/Solver_0_3 (0.01s)
    --- PASS: Test_FindCover_Group/n=10000/ChallengingGen/Solver_0_4 (0.01s)
    --- PASS: Test_FindCover_Group/n=10000/ChallengingGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/ChallengingGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/ChallengingGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/ChallengingGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/ChallengingGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/ChallengingGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/RandomBlobGen/Solver_0_1 (0.07s)
    --- PASS: Test_FindCover_Group/n=10000/RandomBlobGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/RandomBlobGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/RandomBlobGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/RandomBlobGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/RandomBlobGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/RandomBlobGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/RandomBlobGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/RandomBlobGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/RandomBlobGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/AlternatingSizeGen/Solver_0_1 (0.07s)
    --- PASS: Test_FindCover_Group/n=10000/AlternatingSizeGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/AlternatingSizeGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/AlternatingSizeGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/AlternatingSizeGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/AlternatingSizeGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/AlternatingSizeGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/AlternatingSizeGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/AlternatingSizeGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/AlternatingSizeGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/DenseOverlappingGen/Solver_0_1 (0.07s)
    --- PASS: Test_FindCover_Group/n=10000/DenseOverlappingGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/DenseOverlappingGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/DenseOverlappingGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/DenseOverlappingGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/DenseOverlappingGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/DenseOverlappingGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/DenseOverlappingGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/DenseOverlappingGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/DenseOverlappingGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/SparseGen/Solver_0_1 (0.07s)
    --- PASS: Test_FindCover_Group/n=10000/SparseGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/SparseGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/SparseGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/SparseGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/SparseGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/SparseGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/SparseGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/SparseGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=10000/SparseGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/ChallengingGen/Solver_0_1 (0.10s)
    --- PASS: Test_FindCover_Group/n=100000/ChallengingGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/ChallengingGen/Solver_0_3 (0.03s)
    --- PASS: Test_FindCover_Group/n=100000/ChallengingGen/Solver_0_4 (0.02s)
    --- PASS: Test_FindCover_Group/n=100000/ChallengingGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/ChallengingGen/Solver_1_3 (0.02s)
    --- PASS: Test_FindCover_Group/n=100000/ChallengingGen/Solver_1_4 (0.03s)
    --- PASS: Test_FindCover_Group/n=100000/ChallengingGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/ChallengingGen/Solver_2_4 (0.01s)
    --- PASS: Test_FindCover_Group/n=100000/ChallengingGen/Solver_3_4 (0.02s)
    --- PASS: Test_FindCover_Group/n=100000/RandomBlobGen/Solver_0_1 (0.08s)
    --- PASS: Test_FindCover_Group/n=100000/RandomBlobGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/RandomBlobGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/RandomBlobGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/RandomBlobGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/RandomBlobGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/RandomBlobGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/RandomBlobGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/RandomBlobGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/RandomBlobGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/AlternatingSizeGen/Solver_0_1 (0.08s)
    --- PASS: Test_FindCover_Group/n=100000/AlternatingSizeGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/AlternatingSizeGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/AlternatingSizeGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/AlternatingSizeGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/AlternatingSizeGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/AlternatingSizeGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/AlternatingSizeGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/AlternatingSizeGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/AlternatingSizeGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/DenseOverlappingGen/Solver_0_1 (0.08s)
    --- PASS: Test_FindCover_Group/n=100000/DenseOverlappingGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/DenseOverlappingGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/DenseOverlappingGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/DenseOverlappingGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/DenseOverlappingGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/DenseOverlappingGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/DenseOverlappingGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/DenseOverlappingGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/DenseOverlappingGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/SparseGen/Solver_0_1 (0.07s)
    --- PASS: Test_FindCover_Group/n=100000/SparseGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/SparseGen/Solver_0_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/SparseGen/Solver_0_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/SparseGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/SparseGen/Solver_1_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/SparseGen/Solver_1_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/SparseGen/Solver_2_3 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/SparseGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=100000/SparseGen/Solver_3_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000000/ChallengingGen/Solver_0_1 (0.46s)
    --- PASS: Test_FindCover_Group/n=1000000/ChallengingGen/Solver_0_2 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/ChallengingGen/Solver_0_3 (0.28s)
    --- PASS: Test_FindCover_Group/n=1000000/ChallengingGen/Solver_0_4 (0.33s)
    --- PASS: Test_FindCover_Group/n=1000000/ChallengingGen/Solver_1_2 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/ChallengingGen/Solver_1_3 (0.28s)
    --- PASS: Test_FindCover_Group/n=1000000/ChallengingGen/Solver_1_4 (0.37s)
    --- PASS: Test_FindCover_Group/n=1000000/ChallengingGen/Solver_2_3 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/ChallengingGen/Solver_2_4 (0.06s)
    --- PASS: Test_FindCover_Group/n=1000000/ChallengingGen/Solver_3_4 (0.30s)
    --- PASS: Test_FindCover_Group/n=1000000/RandomBlobGen/Solver_0_1 (0.17s)
    --- PASS: Test_FindCover_Group/n=1000000/RandomBlobGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000000/RandomBlobGen/Solver_0_3 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/RandomBlobGen/Solver_0_4 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/RandomBlobGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000000/RandomBlobGen/Solver_1_3 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/RandomBlobGen/Solver_1_4 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/RandomBlobGen/Solver_2_3 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/RandomBlobGen/Solver_2_4 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/RandomBlobGen/Solver_3_4 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/AlternatingSizeGen/Solver_0_1 (0.17s)
    --- PASS: Test_FindCover_Group/n=1000000/AlternatingSizeGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000000/AlternatingSizeGen/Solver_0_3 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/AlternatingSizeGen/Solver_0_4 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/AlternatingSizeGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000000/AlternatingSizeGen/Solver_1_3 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/AlternatingSizeGen/Solver_1_4 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/AlternatingSizeGen/Solver_2_3 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/AlternatingSizeGen/Solver_2_4 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/AlternatingSizeGen/Solver_3_4 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/DenseOverlappingGen/Solver_0_1 (0.17s)
    --- PASS: Test_FindCover_Group/n=1000000/DenseOverlappingGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000000/DenseOverlappingGen/Solver_0_3 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/DenseOverlappingGen/Solver_0_4 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/DenseOverlappingGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000000/DenseOverlappingGen/Solver_1_3 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/DenseOverlappingGen/Solver_1_4 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/DenseOverlappingGen/Solver_2_3 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/DenseOverlappingGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000000/DenseOverlappingGen/Solver_3_4 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/SparseGen/Solver_0_1 (0.17s)
    --- PASS: Test_FindCover_Group/n=1000000/SparseGen/Solver_0_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000000/SparseGen/Solver_0_3 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/SparseGen/Solver_0_4 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/SparseGen/Solver_1_2 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000000/SparseGen/Solver_1_3 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/SparseGen/Solver_1_4 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/SparseGen/Solver_2_3 (0.01s)
    --- PASS: Test_FindCover_Group/n=1000000/SparseGen/Solver_2_4 (0.00s)
    --- PASS: Test_FindCover_Group/n=1000000/SparseGen/Solver_3_4 (0.02s)
=== RUN   Test_Intervals
=== RUN   Test_Intervals/NullInterval[uint8]
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Min
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Max
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/IsEmpty
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Enumerate
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Enumerate/Step=255
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Enumerate/Step=254
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Enumerate/Step=253
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Enumerate/Step=0#01
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Enumerate/Step=255#01
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Contains
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Contains/0
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Contains/1
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Contains/255
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Contains/2
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Contains/254
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Contains/3
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Contains/253
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Contains/0#01
=== RUN   Test_Intervals/NullInterval[uint8]/Sanity/Contains/255#01
=== RUN   Test_Intervals/NullInterval[uint8]/Vs_Empty
=== RUN   Test_Intervals/NullInterval[uint8]/Vs_Empty/Overlaps
=== RUN   Test_Intervals/NullInterval[uint8]/Vs_Empty/Equals
=== RUN   Test_Intervals/NullInterval[uint8]/Vs_Empty/Union
=== RUN   Test_Intervals/NullInterval[uint8]/Vs_Empty/Intersection
=== RUN   Test_Intervals/NullInterval[uint8]/Vs_Empty/Difference
=== RUN   Test_Intervals/NullInterval[uint8]/Vs_Single
=== RUN   Test_Intervals/NullInterval[uint8]/Vs_Single/Overlaps
=== RUN   Test_Intervals/NullInterval[uint8]/Vs_Single/Equals
=== RUN   Test_Intervals/NullInterval[uint8]/Vs_Single/Union
=== RUN   Test_Intervals/NullInterval[uint8]/Vs_Single/Intersection
=== RUN   Test_Intervals/NullInterval[uint8]/Vs_Single/Difference
=== RUN   Test_Intervals/NullInterval[uint8]/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[uint8]
=== RUN   Test_Intervals/SingletonInterval[uint8]/0
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Sanity
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Sanity/Enumerate/Step=255
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Sanity/Enumerate/Step=254
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Sanity/Enumerate/Step=253
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Sanity/Contains/255
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Sanity/Contains/254
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Sanity/Contains/253
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[uint8]/0/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[uint8]/1
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Sanity
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Sanity/Enumerate/Step=255
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Sanity/Enumerate/Step=254
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Sanity/Enumerate/Step=253
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Sanity/Contains/255
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Sanity/Contains/254
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Sanity/Contains/253
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[uint8]/1/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[uint8]/253
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Sanity
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Sanity/Enumerate/Step=255
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Sanity/Enumerate/Step=254
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Sanity/Enumerate/Step=253
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Sanity/Contains/255
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Sanity/Contains/254
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Sanity/Contains/253
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[uint8]/253/Vs_Merged
=== RUN   Test_Intervals/NullInterval[uint16]
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Min
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Max
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/IsEmpty
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Enumerate
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Enumerate/Step=65535
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Enumerate/Step=65534
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Enumerate/Step=65533
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Enumerate/Step=0#01
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Enumerate/Step=65535#01
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Contains
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Contains/0
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Contains/1
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Contains/65535
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Contains/2
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Contains/65534
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Contains/3
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Contains/65533
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Contains/0#01
=== RUN   Test_Intervals/NullInterval[uint16]/Sanity/Contains/65535#01
=== RUN   Test_Intervals/NullInterval[uint16]/Vs_Empty
=== RUN   Test_Intervals/NullInterval[uint16]/Vs_Empty/Overlaps
=== RUN   Test_Intervals/NullInterval[uint16]/Vs_Empty/Equals
=== RUN   Test_Intervals/NullInterval[uint16]/Vs_Empty/Union
=== RUN   Test_Intervals/NullInterval[uint16]/Vs_Empty/Intersection
=== RUN   Test_Intervals/NullInterval[uint16]/Vs_Empty/Difference
=== RUN   Test_Intervals/NullInterval[uint16]/Vs_Single
=== RUN   Test_Intervals/NullInterval[uint16]/Vs_Single/Overlaps
=== RUN   Test_Intervals/NullInterval[uint16]/Vs_Single/Equals
=== RUN   Test_Intervals/NullInterval[uint16]/Vs_Single/Union
=== RUN   Test_Intervals/NullInterval[uint16]/Vs_Single/Intersection
=== RUN   Test_Intervals/NullInterval[uint16]/Vs_Single/Difference
=== RUN   Test_Intervals/NullInterval[uint16]/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[uint16]
=== RUN   Test_Intervals/SingletonInterval[uint16]/0
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Sanity
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Sanity/Enumerate/Step=65535
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Sanity/Enumerate/Step=65534
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Sanity/Enumerate/Step=65533
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Sanity/Contains/65535
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Sanity/Contains/65534
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Sanity/Contains/65533
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[uint16]/0/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[uint16]/1
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Sanity
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Sanity/Enumerate/Step=65535
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Sanity/Enumerate/Step=65534
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Sanity/Enumerate/Step=65533
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Sanity/Contains/65535
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Sanity/Contains/65534
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Sanity/Contains/65533
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[uint16]/1/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Sanity
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Enumerate/Step=65535
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Enumerate/Step=65534
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Enumerate/Step=65533
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Contains/65535
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Contains/65534
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Contains/65533
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[uint16]/65533/Vs_Merged
=== RUN   Test_Intervals/NullInterval[uint32]
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Min
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Max
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/IsEmpty
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Enumerate
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Enumerate/Step=4294967295
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Enumerate/Step=4294967294
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Enumerate/Step=4294967293
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Enumerate/Step=0#01
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Enumerate/Step=4294967295#01
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Contains
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Contains/0
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Contains/1
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Contains/4294967295
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Contains/2
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Contains/4294967294
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Contains/3
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Contains/4294967293
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Contains/0#01
=== RUN   Test_Intervals/NullInterval[uint32]/Sanity/Contains/4294967295#01
=== RUN   Test_Intervals/NullInterval[uint32]/Vs_Empty
=== RUN   Test_Intervals/NullInterval[uint32]/Vs_Empty/Overlaps
=== RUN   Test_Intervals/NullInterval[uint32]/Vs_Empty/Equals
=== RUN   Test_Intervals/NullInterval[uint32]/Vs_Empty/Union
=== RUN   Test_Intervals/NullInterval[uint32]/Vs_Empty/Intersection
=== RUN   Test_Intervals/NullInterval[uint32]/Vs_Empty/Difference
=== RUN   Test_Intervals/NullInterval[uint32]/Vs_Single
=== RUN   Test_Intervals/NullInterval[uint32]/Vs_Single/Overlaps
=== RUN   Test_Intervals/NullInterval[uint32]/Vs_Single/Equals
=== RUN   Test_Intervals/NullInterval[uint32]/Vs_Single/Union
=== RUN   Test_Intervals/NullInterval[uint32]/Vs_Single/Intersection
=== RUN   Test_Intervals/NullInterval[uint32]/Vs_Single/Difference
=== RUN   Test_Intervals/NullInterval[uint32]/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[uint32]
=== RUN   Test_Intervals/SingletonInterval[uint32]/0
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Sanity
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Sanity/Enumerate/Step=4294967295
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Sanity/Enumerate/Step=4294967294
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Sanity/Enumerate/Step=4294967293
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Sanity/Contains/4294967295
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Sanity/Contains/4294967294
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Sanity/Contains/4294967293
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[uint32]/0/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[uint32]/1
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Sanity
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Sanity/Enumerate/Step=4294967295
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Sanity/Enumerate/Step=4294967294
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Sanity/Enumerate/Step=4294967293
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Sanity/Contains/4294967295
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Sanity/Contains/4294967294
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Sanity/Contains/4294967293
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[uint32]/1/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Enumerate/Step=4294967295
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Enumerate/Step=4294967294
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Enumerate/Step=4294967293
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Contains/4294967295
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Contains/4294967294
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Contains/4294967293
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[uint32]/4294967293/Vs_Merged
=== RUN   Test_Intervals/NullInterval[uint64]
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Min
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Max
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/IsEmpty
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Enumerate
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Enumerate/Step=18446744073709551615
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Enumerate/Step=18446744073709551614
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Enumerate/Step=18446744073709551613
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Enumerate/Step=0#01
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Enumerate/Step=18446744073709551615#01
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Contains
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Contains/0
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Contains/1
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Contains/18446744073709551615
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Contains/2
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Contains/18446744073709551614
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Contains/3
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Contains/18446744073709551613
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Contains/0#01
=== RUN   Test_Intervals/NullInterval[uint64]/Sanity/Contains/18446744073709551615#01
=== RUN   Test_Intervals/NullInterval[uint64]/Vs_Empty
=== RUN   Test_Intervals/NullInterval[uint64]/Vs_Empty/Overlaps
=== RUN   Test_Intervals/NullInterval[uint64]/Vs_Empty/Equals
=== RUN   Test_Intervals/NullInterval[uint64]/Vs_Empty/Union
=== RUN   Test_Intervals/NullInterval[uint64]/Vs_Empty/Intersection
=== RUN   Test_Intervals/NullInterval[uint64]/Vs_Empty/Difference
=== RUN   Test_Intervals/NullInterval[uint64]/Vs_Single
=== RUN   Test_Intervals/NullInterval[uint64]/Vs_Single/Overlaps
=== RUN   Test_Intervals/NullInterval[uint64]/Vs_Single/Equals
=== RUN   Test_Intervals/NullInterval[uint64]/Vs_Single/Union
=== RUN   Test_Intervals/NullInterval[uint64]/Vs_Single/Intersection
=== RUN   Test_Intervals/NullInterval[uint64]/Vs_Single/Difference
=== RUN   Test_Intervals/NullInterval[uint64]/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[uint64]
=== RUN   Test_Intervals/SingletonInterval[uint64]/0
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Sanity
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Sanity/Enumerate/Step=18446744073709551615
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Sanity/Enumerate/Step=18446744073709551614
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Sanity/Enumerate/Step=18446744073709551613
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Sanity/Contains/18446744073709551615
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Sanity/Contains/18446744073709551614
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Sanity/Contains/18446744073709551613
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[uint64]/0/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[uint64]/1
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Sanity
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Sanity/Enumerate/Step=18446744073709551615
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Sanity/Enumerate/Step=18446744073709551614
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Sanity/Enumerate/Step=18446744073709551613
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Sanity/Contains/18446744073709551615
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Sanity/Contains/18446744073709551614
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Sanity/Contains/18446744073709551613
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[uint64]/1/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Enumerate/Step=18446744073709551615
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Enumerate/Step=18446744073709551614
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Enumerate/Step=18446744073709551613
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Contains/18446744073709551615
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Contains/18446744073709551614
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Contains/18446744073709551613
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Vs_Merged
=== RUN   Test_Intervals/NullInterval[uint]
=== RUN   Test_Intervals/NullInterval[uint]/Sanity
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Min
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Max
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/IsEmpty
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Enumerate
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Enumerate/Step=18446744073709551615
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Enumerate/Step=18446744073709551614
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Enumerate/Step=18446744073709551613
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Enumerate/Step=0#01
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Enumerate/Step=18446744073709551615#01
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Contains
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Contains/0
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Contains/1
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Contains/18446744073709551615
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Contains/2
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Contains/18446744073709551614
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Contains/3
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Contains/18446744073709551613
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Contains/0#01
=== RUN   Test_Intervals/NullInterval[uint]/Sanity/Contains/18446744073709551615#01
=== RUN   Test_Intervals/NullInterval[uint]/Vs_Empty
=== RUN   Test_Intervals/NullInterval[uint]/Vs_Empty/Overlaps
=== RUN   Test_Intervals/NullInterval[uint]/Vs_Empty/Equals
=== RUN   Test_Intervals/NullInterval[uint]/Vs_Empty/Union
=== RUN   Test_Intervals/NullInterval[uint]/Vs_Empty/Intersection
=== RUN   Test_Intervals/NullInterval[uint]/Vs_Empty/Difference
=== RUN   Test_Intervals/NullInterval[uint]/Vs_Single
=== RUN   Test_Intervals/NullInterval[uint]/Vs_Single/Overlaps
=== RUN   Test_Intervals/NullInterval[uint]/Vs_Single/Equals
=== RUN   Test_Intervals/NullInterval[uint]/Vs_Single/Union
=== RUN   Test_Intervals/NullInterval[uint]/Vs_Single/Intersection
=== RUN   Test_Intervals/NullInterval[uint]/Vs_Single/Difference
=== RUN   Test_Intervals/NullInterval[uint]/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[uint]
=== RUN   Test_Intervals/SingletonInterval[uint]/0
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Sanity
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Sanity/Enumerate/Step=18446744073709551615
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Sanity/Enumerate/Step=18446744073709551614
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Sanity/Enumerate/Step=18446744073709551613
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Sanity/Contains/18446744073709551615
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Sanity/Contains/18446744073709551614
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Sanity/Contains/18446744073709551613
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[uint]/0/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[uint]/1
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Sanity
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Sanity/Enumerate/Step=18446744073709551615
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Sanity/Enumerate/Step=18446744073709551614
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Sanity/Enumerate/Step=18446744073709551613
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Sanity/Contains/18446744073709551615
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Sanity/Contains/18446744073709551614
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Sanity/Contains/18446744073709551613
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[uint]/1/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Enumerate/Step=18446744073709551615
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Enumerate/Step=18446744073709551614
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Enumerate/Step=18446744073709551613
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Contains/18446744073709551615
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Contains/18446744073709551614
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Contains/18446744073709551613
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[uint]/18446744073709551613/Vs_Merged
=== RUN   Test_Intervals/NullInterval[int8]
=== RUN   Test_Intervals/NullInterval[int8]/Sanity
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Min
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Max
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/IsEmpty
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Enumerate
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Enumerate/Step=-1
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Enumerate/Step=-2
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Enumerate/Step=-3
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Enumerate/Step=-128
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Enumerate/Step=127
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Contains
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Contains/0
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Contains/1
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Contains/-1
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Contains/2
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Contains/-2
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Contains/3
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Contains/-3
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Contains/-128
=== RUN   Test_Intervals/NullInterval[int8]/Sanity/Contains/127
=== RUN   Test_Intervals/NullInterval[int8]/Vs_Empty
=== RUN   Test_Intervals/NullInterval[int8]/Vs_Empty/Overlaps
=== RUN   Test_Intervals/NullInterval[int8]/Vs_Empty/Equals
=== RUN   Test_Intervals/NullInterval[int8]/Vs_Empty/Union
=== RUN   Test_Intervals/NullInterval[int8]/Vs_Empty/Intersection
=== RUN   Test_Intervals/NullInterval[int8]/Vs_Empty/Difference
=== RUN   Test_Intervals/NullInterval[int8]/Vs_Single
=== RUN   Test_Intervals/NullInterval[int8]/Vs_Single/Overlaps
=== RUN   Test_Intervals/NullInterval[int8]/Vs_Single/Equals
=== RUN   Test_Intervals/NullInterval[int8]/Vs_Single/Union
=== RUN   Test_Intervals/NullInterval[int8]/Vs_Single/Intersection
=== RUN   Test_Intervals/NullInterval[int8]/Vs_Single/Difference
=== RUN   Test_Intervals/NullInterval[int8]/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[int8]
=== RUN   Test_Intervals/SingletonInterval[int8]/0
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Sanity
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Sanity/Enumerate/Step=-1
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Sanity/Enumerate/Step=-2
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Sanity/Enumerate/Step=-3
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Sanity/Contains/-1
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Sanity/Contains/-2
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Sanity/Contains/-3
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[int8]/0/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[int8]/1
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Sanity
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Sanity/Enumerate/Step=-1
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Sanity/Enumerate/Step=-2
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Sanity/Enumerate/Step=-3
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Sanity/Contains/-1
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Sanity/Contains/-2
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Sanity/Contains/-3
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[int8]/1/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[int8]/-3
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Sanity
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Sanity/Enumerate/Step=-1
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Sanity/Enumerate/Step=-2
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Sanity/Enumerate/Step=-3
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Sanity/Contains/-1
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Sanity/Contains/-2
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Sanity/Contains/-3
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[int8]/-3/Vs_Merged
=== RUN   Test_Intervals/NullInterval[int16]
=== RUN   Test_Intervals/NullInterval[int16]/Sanity
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Min
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Max
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/IsEmpty
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Enumerate
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Enumerate/Step=-1
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Enumerate/Step=-2
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Enumerate/Step=-3
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Enumerate/Step=-32768
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Enumerate/Step=32767
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Contains
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Contains/0
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Contains/1
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Contains/-1
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Contains/2
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Contains/-2
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Contains/3
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Contains/-3
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Contains/-32768
=== RUN   Test_Intervals/NullInterval[int16]/Sanity/Contains/32767
=== RUN   Test_Intervals/NullInterval[int16]/Vs_Empty
=== RUN   Test_Intervals/NullInterval[int16]/Vs_Empty/Overlaps
=== RUN   Test_Intervals/NullInterval[int16]/Vs_Empty/Equals
=== RUN   Test_Intervals/NullInterval[int16]/Vs_Empty/Union
=== RUN   Test_Intervals/NullInterval[int16]/Vs_Empty/Intersection
=== RUN   Test_Intervals/NullInterval[int16]/Vs_Empty/Difference
=== RUN   Test_Intervals/NullInterval[int16]/Vs_Single
=== RUN   Test_Intervals/NullInterval[int16]/Vs_Single/Overlaps
=== RUN   Test_Intervals/NullInterval[int16]/Vs_Single/Equals
=== RUN   Test_Intervals/NullInterval[int16]/Vs_Single/Union
=== RUN   Test_Intervals/NullInterval[int16]/Vs_Single/Intersection
=== RUN   Test_Intervals/NullInterval[int16]/Vs_Single/Difference
=== RUN   Test_Intervals/NullInterval[int16]/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[int16]
=== RUN   Test_Intervals/SingletonInterval[int16]/0
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Sanity
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Sanity/Enumerate/Step=-1
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Sanity/Enumerate/Step=-2
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Sanity/Enumerate/Step=-3
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Sanity/Contains/-1
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Sanity/Contains/-2
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Sanity/Contains/-3
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[int16]/0/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[int16]/1
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Sanity
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Sanity/Enumerate/Step=-1
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Sanity/Enumerate/Step=-2
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Sanity/Enumerate/Step=-3
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Sanity/Contains/-1
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Sanity/Contains/-2
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Sanity/Contains/-3
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[int16]/1/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[int16]/-3
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Sanity
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Sanity/Enumerate/Step=-1
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Sanity/Enumerate/Step=-2
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Sanity/Enumerate/Step=-3
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Sanity/Contains/-1
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Sanity/Contains/-2
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Sanity/Contains/-3
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[int16]/-3/Vs_Merged
=== RUN   Test_Intervals/NullInterval[int32]
=== RUN   Test_Intervals/NullInterval[int32]/Sanity
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Min
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Max
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/IsEmpty
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Enumerate
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Enumerate/Step=-1
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Enumerate/Step=-2
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Enumerate/Step=-3
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Enumerate/Step=-2147483648
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Enumerate/Step=2147483647
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Contains
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Contains/0
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Contains/1
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Contains/-1
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Contains/2
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Contains/-2
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Contains/3
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Contains/-3
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Contains/-2147483648
=== RUN   Test_Intervals/NullInterval[int32]/Sanity/Contains/2147483647
=== RUN   Test_Intervals/NullInterval[int32]/Vs_Empty
=== RUN   Test_Intervals/NullInterval[int32]/Vs_Empty/Overlaps
=== RUN   Test_Intervals/NullInterval[int32]/Vs_Empty/Equals
=== RUN   Test_Intervals/NullInterval[int32]/Vs_Empty/Union
=== RUN   Test_Intervals/NullInterval[int32]/Vs_Empty/Intersection
=== RUN   Test_Intervals/NullInterval[int32]/Vs_Empty/Difference
=== RUN   Test_Intervals/NullInterval[int32]/Vs_Single
=== RUN   Test_Intervals/NullInterval[int32]/Vs_Single/Overlaps
=== RUN   Test_Intervals/NullInterval[int32]/Vs_Single/Equals
=== RUN   Test_Intervals/NullInterval[int32]/Vs_Single/Union
=== RUN   Test_Intervals/NullInterval[int32]/Vs_Single/Intersection
=== RUN   Test_Intervals/NullInterval[int32]/Vs_Single/Difference
=== RUN   Test_Intervals/NullInterval[int32]/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[int32]
=== RUN   Test_Intervals/SingletonInterval[int32]/0
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Sanity
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Sanity/Enumerate/Step=-1
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Sanity/Enumerate/Step=-2
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Sanity/Enumerate/Step=-3
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Sanity/Contains/-1
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Sanity/Contains/-2
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Sanity/Contains/-3
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[int32]/0/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[int32]/1
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Sanity
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Sanity/Enumerate/Step=-1
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Sanity/Enumerate/Step=-2
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Sanity/Enumerate/Step=-3
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Sanity/Contains/-1
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Sanity/Contains/-2
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Sanity/Contains/-3
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[int32]/1/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[int32]/-3
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Sanity
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Sanity/Enumerate/Step=-1
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Sanity/Enumerate/Step=-2
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Sanity/Enumerate/Step=-3
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Sanity/Contains/-1
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Sanity/Contains/-2
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Sanity/Contains/-3
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[int32]/-3/Vs_Merged
=== RUN   Test_Intervals/NullInterval[int64]
=== RUN   Test_Intervals/NullInterval[int64]/Sanity
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Min
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Max
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/IsEmpty
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Enumerate
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Enumerate/Step=-1
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Enumerate/Step=-2
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Enumerate/Step=-3
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Enumerate/Step=-9223372036854775808
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Enumerate/Step=9223372036854775807
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Contains
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Contains/0
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Contains/1
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Contains/-1
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Contains/2
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Contains/-2
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Contains/3
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Contains/-3
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Contains/-9223372036854775808
=== RUN   Test_Intervals/NullInterval[int64]/Sanity/Contains/9223372036854775807
=== RUN   Test_Intervals/NullInterval[int64]/Vs_Empty
=== RUN   Test_Intervals/NullInterval[int64]/Vs_Empty/Overlaps
=== RUN   Test_Intervals/NullInterval[int64]/Vs_Empty/Equals
=== RUN   Test_Intervals/NullInterval[int64]/Vs_Empty/Union
=== RUN   Test_Intervals/NullInterval[int64]/Vs_Empty/Intersection
=== RUN   Test_Intervals/NullInterval[int64]/Vs_Empty/Difference
=== RUN   Test_Intervals/NullInterval[int64]/Vs_Single
=== RUN   Test_Intervals/NullInterval[int64]/Vs_Single/Overlaps
=== RUN   Test_Intervals/NullInterval[int64]/Vs_Single/Equals
=== RUN   Test_Intervals/NullInterval[int64]/Vs_Single/Union
=== RUN   Test_Intervals/NullInterval[int64]/Vs_Single/Intersection
=== RUN   Test_Intervals/NullInterval[int64]/Vs_Single/Difference
=== RUN   Test_Intervals/NullInterval[int64]/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[int64]
=== RUN   Test_Intervals/SingletonInterval[int64]/0
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Sanity
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Sanity/Enumerate/Step=-1
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Sanity/Enumerate/Step=-2
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Sanity/Enumerate/Step=-3
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Sanity/Contains/-1
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Sanity/Contains/-2
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Sanity/Contains/-3
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[int64]/0/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[int64]/1
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Sanity
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Sanity/Enumerate/Step=-1
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Sanity/Enumerate/Step=-2
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Sanity/Enumerate/Step=-3
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Sanity/Contains/-1
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Sanity/Contains/-2
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Sanity/Contains/-3
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[int64]/1/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[int64]/-3
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Sanity
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Sanity/Enumerate/Step=-1
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Sanity/Enumerate/Step=-2
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Sanity/Enumerate/Step=-3
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Sanity/Contains/-1
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Sanity/Contains/-2
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Sanity/Contains/-3
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[int64]/-3/Vs_Merged
=== RUN   Test_Intervals/NullInterval[int]
=== RUN   Test_Intervals/NullInterval[int]/Sanity
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Min
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Max
=== RUN   Test_Intervals/NullInterval[int]/Sanity/IsEmpty
=== RUN   Test_Intervals/NullInterval[int]/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Enumerate
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Enumerate/Step=-1
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Enumerate/Step=-2
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Enumerate/Step=-3
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Enumerate/Step=-9223372036854775808
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Enumerate/Step=9223372036854775807
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Contains
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Contains/0
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Contains/1
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Contains/-1
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Contains/2
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Contains/-2
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Contains/3
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Contains/-3
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Contains/-9223372036854775808
=== RUN   Test_Intervals/NullInterval[int]/Sanity/Contains/9223372036854775807
=== RUN   Test_Intervals/NullInterval[int]/Vs_Empty
=== RUN   Test_Intervals/NullInterval[int]/Vs_Empty/Overlaps
=== RUN   Test_Intervals/NullInterval[int]/Vs_Empty/Equals
=== RUN   Test_Intervals/NullInterval[int]/Vs_Empty/Union
=== RUN   Test_Intervals/NullInterval[int]/Vs_Empty/Intersection
=== RUN   Test_Intervals/NullInterval[int]/Vs_Empty/Difference
=== RUN   Test_Intervals/NullInterval[int]/Vs_Single
=== RUN   Test_Intervals/NullInterval[int]/Vs_Single/Overlaps
=== RUN   Test_Intervals/NullInterval[int]/Vs_Single/Equals
=== RUN   Test_Intervals/NullInterval[int]/Vs_Single/Union
=== RUN   Test_Intervals/NullInterval[int]/Vs_Single/Intersection
=== RUN   Test_Intervals/NullInterval[int]/Vs_Single/Difference
=== RUN   Test_Intervals/NullInterval[int]/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[int]
=== RUN   Test_Intervals/SingletonInterval[int]/0
=== RUN   Test_Intervals/SingletonInterval[int]/0/Sanity
=== RUN   Test_Intervals/SingletonInterval[int]/0/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[int]/0/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[int]/0/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[int]/0/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[int]/0/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[int]/0/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[int]/0/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[int]/0/Sanity/Enumerate/Step=-1
=== RUN   Test_Intervals/SingletonInterval[int]/0/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[int]/0/Sanity/Enumerate/Step=-2
=== RUN   Test_Intervals/SingletonInterval[int]/0/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[int]/0/Sanity/Enumerate/Step=-3
=== RUN   Test_Intervals/SingletonInterval[int]/0/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[int]/0/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[int]/0/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[int]/0/Sanity/Contains/-1
=== RUN   Test_Intervals/SingletonInterval[int]/0/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[int]/0/Sanity/Contains/-2
=== RUN   Test_Intervals/SingletonInterval[int]/0/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[int]/0/Sanity/Contains/-3
=== RUN   Test_Intervals/SingletonInterval[int]/0/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[int]/0/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[int]/0/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[int]/0/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[int]/0/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[int]/0/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[int]/0/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[int]/0/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[int]/1
=== RUN   Test_Intervals/SingletonInterval[int]/1/Sanity
=== RUN   Test_Intervals/SingletonInterval[int]/1/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[int]/1/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[int]/1/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[int]/1/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[int]/1/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[int]/1/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[int]/1/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[int]/1/Sanity/Enumerate/Step=-1
=== RUN   Test_Intervals/SingletonInterval[int]/1/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[int]/1/Sanity/Enumerate/Step=-2
=== RUN   Test_Intervals/SingletonInterval[int]/1/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[int]/1/Sanity/Enumerate/Step=-3
=== RUN   Test_Intervals/SingletonInterval[int]/1/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[int]/1/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[int]/1/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[int]/1/Sanity/Contains/-1
=== RUN   Test_Intervals/SingletonInterval[int]/1/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[int]/1/Sanity/Contains/-2
=== RUN   Test_Intervals/SingletonInterval[int]/1/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[int]/1/Sanity/Contains/-3
=== RUN   Test_Intervals/SingletonInterval[int]/1/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[int]/1/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[int]/1/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[int]/1/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[int]/1/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[int]/1/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[int]/1/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[int]/1/Vs_Merged
=== RUN   Test_Intervals/SingletonInterval[int]/-3
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Sanity
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Sanity/Min
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Sanity/Max
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Sanity/IsEmpty
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Sanity/IsEmpty_and_IsSingleton
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Sanity/Enumerate
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Sanity/Enumerate/Step=0
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Sanity/Enumerate/Step=1
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Sanity/Enumerate/Step=-1
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Sanity/Enumerate/Step=2
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Sanity/Enumerate/Step=-2
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Sanity/Enumerate/Step=3
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Sanity/Enumerate/Step=-3
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Sanity/Contains
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Sanity/Contains/0
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Sanity/Contains/1
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Sanity/Contains/-1
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Sanity/Contains/2
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Sanity/Contains/-2
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Sanity/Contains/3
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Sanity/Contains/-3
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Vs_Empty
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Vs_Empty/Overlaps
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Vs_Empty/Equals
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Vs_Empty/Union
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Vs_Empty/Intersection
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Vs_Empty/Difference
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Vs_Single
=== RUN   Test_Intervals/SingletonInterval[int]/-3/Vs_Merged
--- PASS: Test_Intervals (0.01s)
    --- PASS: Test_Intervals/NullInterval[uint8] (0.00s)
        --- PASS: Test_Intervals/NullInterval[uint8]/Sanity (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Min (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Max (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/IsEmpty (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/IsEmpty_and_IsSingleton (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Enumerate (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Enumerate/Step=0 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Enumerate/Step=1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Enumerate/Step=255 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Enumerate/Step=2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Enumerate/Step=254 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Enumerate/Step=3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Enumerate/Step=253 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Enumerate/Step=0#01 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Enumerate/Step=255#01 (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Contains (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Contains/0 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Contains/1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Contains/255 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Contains/2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Contains/254 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Contains/3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Contains/253 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Contains/0#01 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint8]/Sanity/Contains/255#01 (0.00s)
        --- PASS: Test_Intervals/NullInterval[uint8]/Vs_Empty (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint8]/Vs_Empty/Overlaps (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint8]/Vs_Empty/Equals (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint8]/Vs_Empty/Union (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint8]/Vs_Empty/Intersection (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint8]/Vs_Empty/Difference (0.00s)
        --- PASS: Test_Intervals/NullInterval[uint8]/Vs_Single (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint8]/Vs_Single/Overlaps (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint8]/Vs_Single/Equals (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint8]/Vs_Single/Union (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint8]/Vs_Single/Intersection (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint8]/Vs_Single/Difference (0.00s)
        --- PASS: Test_Intervals/NullInterval[uint8]/Vs_Merged (0.00s)
    --- PASS: Test_Intervals/SingletonInterval[uint8] (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[uint8]/0 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Sanity/Enumerate/Step=255 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Sanity/Enumerate/Step=254 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Sanity/Enumerate/Step=253 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Sanity/Contains/255 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Sanity/Contains/254 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Sanity/Contains/253 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint8]/0/Vs_Merged (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[uint8]/1 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Sanity/Enumerate/Step=255 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Sanity/Enumerate/Step=254 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Sanity/Enumerate/Step=253 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Sanity/Contains/255 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Sanity/Contains/254 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Sanity/Contains/253 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint8]/1/Vs_Merged (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[uint8]/253 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Sanity/Enumerate/Step=255 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Sanity/Enumerate/Step=254 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Sanity/Enumerate/Step=253 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Sanity/Contains/255 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Sanity/Contains/254 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Sanity/Contains/253 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint8]/253/Vs_Merged (0.00s)
    --- PASS: Test_Intervals/NullInterval[uint16] (0.00s)
        --- PASS: Test_Intervals/NullInterval[uint16]/Sanity (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Min (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Max (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/IsEmpty (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/IsEmpty_and_IsSingleton (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Enumerate (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Enumerate/Step=0 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Enumerate/Step=1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Enumerate/Step=65535 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Enumerate/Step=2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Enumerate/Step=65534 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Enumerate/Step=3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Enumerate/Step=65533 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Enumerate/Step=0#01 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Enumerate/Step=65535#01 (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Contains (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Contains/0 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Contains/1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Contains/65535 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Contains/2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Contains/65534 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Contains/3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Contains/65533 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Contains/0#01 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint16]/Sanity/Contains/65535#01 (0.00s)
        --- PASS: Test_Intervals/NullInterval[uint16]/Vs_Empty (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint16]/Vs_Empty/Overlaps (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint16]/Vs_Empty/Equals (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint16]/Vs_Empty/Union (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint16]/Vs_Empty/Intersection (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint16]/Vs_Empty/Difference (0.00s)
        --- PASS: Test_Intervals/NullInterval[uint16]/Vs_Single (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint16]/Vs_Single/Overlaps (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint16]/Vs_Single/Equals (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint16]/Vs_Single/Union (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint16]/Vs_Single/Intersection (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint16]/Vs_Single/Difference (0.00s)
        --- PASS: Test_Intervals/NullInterval[uint16]/Vs_Merged (0.00s)
    --- PASS: Test_Intervals/SingletonInterval[uint16] (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[uint16]/0 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Sanity/Enumerate/Step=65535 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Sanity/Enumerate/Step=65534 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Sanity/Enumerate/Step=65533 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Sanity/Contains/65535 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Sanity/Contains/65534 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Sanity/Contains/65533 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint16]/0/Vs_Merged (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[uint16]/1 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Sanity/Enumerate/Step=65535 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Sanity/Enumerate/Step=65534 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Sanity/Enumerate/Step=65533 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Sanity/Contains/65535 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Sanity/Contains/65534 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Sanity/Contains/65533 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint16]/1/Vs_Merged (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[uint16]/65533 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Enumerate/Step=65535 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Enumerate/Step=65534 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Enumerate/Step=65533 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Contains/65535 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Contains/65534 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Sanity/Contains/65533 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint16]/65533/Vs_Merged (0.00s)
    --- PASS: Test_Intervals/NullInterval[uint32] (0.00s)
        --- PASS: Test_Intervals/NullInterval[uint32]/Sanity (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Min (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Max (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/IsEmpty (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/IsEmpty_and_IsSingleton (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Enumerate (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Enumerate/Step=0 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Enumerate/Step=1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Enumerate/Step=4294967295 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Enumerate/Step=2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Enumerate/Step=4294967294 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Enumerate/Step=3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Enumerate/Step=4294967293 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Enumerate/Step=0#01 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Enumerate/Step=4294967295#01 (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Contains (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Contains/0 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Contains/1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Contains/4294967295 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Contains/2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Contains/4294967294 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Contains/3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Contains/4294967293 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Contains/0#01 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint32]/Sanity/Contains/4294967295#01 (0.00s)
        --- PASS: Test_Intervals/NullInterval[uint32]/Vs_Empty (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint32]/Vs_Empty/Overlaps (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint32]/Vs_Empty/Equals (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint32]/Vs_Empty/Union (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint32]/Vs_Empty/Intersection (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint32]/Vs_Empty/Difference (0.00s)
        --- PASS: Test_Intervals/NullInterval[uint32]/Vs_Single (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint32]/Vs_Single/Overlaps (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint32]/Vs_Single/Equals (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint32]/Vs_Single/Union (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint32]/Vs_Single/Intersection (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint32]/Vs_Single/Difference (0.00s)
        --- PASS: Test_Intervals/NullInterval[uint32]/Vs_Merged (0.00s)
    --- PASS: Test_Intervals/SingletonInterval[uint32] (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[uint32]/0 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Sanity/Enumerate/Step=4294967295 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Sanity/Enumerate/Step=4294967294 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Sanity/Enumerate/Step=4294967293 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Sanity/Contains/4294967295 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Sanity/Contains/4294967294 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Sanity/Contains/4294967293 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint32]/0/Vs_Merged (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[uint32]/1 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Sanity/Enumerate/Step=4294967295 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Sanity/Enumerate/Step=4294967294 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Sanity/Enumerate/Step=4294967293 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Sanity/Contains/4294967295 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Sanity/Contains/4294967294 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Sanity/Contains/4294967293 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint32]/1/Vs_Merged (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Enumerate/Step=4294967295 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Enumerate/Step=4294967294 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Enumerate/Step=4294967293 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Contains/4294967295 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Contains/4294967294 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Sanity/Contains/4294967293 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint32]/4294967293/Vs_Merged (0.00s)
    --- PASS: Test_Intervals/NullInterval[uint64] (0.00s)
        --- PASS: Test_Intervals/NullInterval[uint64]/Sanity (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Min (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Max (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/IsEmpty (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/IsEmpty_and_IsSingleton (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Enumerate (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Enumerate/Step=0 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Enumerate/Step=1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Enumerate/Step=18446744073709551615 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Enumerate/Step=2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Enumerate/Step=18446744073709551614 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Enumerate/Step=3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Enumerate/Step=18446744073709551613 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Enumerate/Step=0#01 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Enumerate/Step=18446744073709551615#01 (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Contains (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Contains/0 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Contains/1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Contains/18446744073709551615 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Contains/2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Contains/18446744073709551614 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Contains/3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Contains/18446744073709551613 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Contains/0#01 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint64]/Sanity/Contains/18446744073709551615#01 (0.00s)
        --- PASS: Test_Intervals/NullInterval[uint64]/Vs_Empty (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint64]/Vs_Empty/Overlaps (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint64]/Vs_Empty/Equals (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint64]/Vs_Empty/Union (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint64]/Vs_Empty/Intersection (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint64]/Vs_Empty/Difference (0.00s)
        --- PASS: Test_Intervals/NullInterval[uint64]/Vs_Single (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint64]/Vs_Single/Overlaps (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint64]/Vs_Single/Equals (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint64]/Vs_Single/Union (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint64]/Vs_Single/Intersection (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint64]/Vs_Single/Difference (0.00s)
        --- PASS: Test_Intervals/NullInterval[uint64]/Vs_Merged (0.00s)
    --- PASS: Test_Intervals/SingletonInterval[uint64] (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[uint64]/0 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Sanity/Enumerate/Step=18446744073709551615 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Sanity/Enumerate/Step=18446744073709551614 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Sanity/Enumerate/Step=18446744073709551613 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Sanity/Contains/18446744073709551615 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Sanity/Contains/18446744073709551614 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Sanity/Contains/18446744073709551613 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint64]/0/Vs_Merged (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[uint64]/1 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Sanity/Enumerate/Step=18446744073709551615 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Sanity/Enumerate/Step=18446744073709551614 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Sanity/Enumerate/Step=18446744073709551613 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Sanity/Contains/18446744073709551615 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Sanity/Contains/18446744073709551614 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Sanity/Contains/18446744073709551613 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint64]/1/Vs_Merged (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Enumerate/Step=18446744073709551615 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Enumerate/Step=18446744073709551614 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Enumerate/Step=18446744073709551613 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Contains/18446744073709551615 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Contains/18446744073709551614 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Sanity/Contains/18446744073709551613 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint64]/18446744073709551613/Vs_Merged (0.00s)
    --- PASS: Test_Intervals/NullInterval[uint] (0.00s)
        --- PASS: Test_Intervals/NullInterval[uint]/Sanity (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Min (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Max (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint]/Sanity/IsEmpty (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint]/Sanity/IsEmpty_and_IsSingleton (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Enumerate (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Enumerate/Step=0 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Enumerate/Step=1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Enumerate/Step=18446744073709551615 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Enumerate/Step=2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Enumerate/Step=18446744073709551614 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Enumerate/Step=3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Enumerate/Step=18446744073709551613 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Enumerate/Step=0#01 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Enumerate/Step=18446744073709551615#01 (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Contains (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Contains/0 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Contains/1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Contains/18446744073709551615 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Contains/2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Contains/18446744073709551614 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Contains/3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Contains/18446744073709551613 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Contains/0#01 (0.00s)
                --- PASS: Test_Intervals/NullInterval[uint]/Sanity/Contains/18446744073709551615#01 (0.00s)
        --- PASS: Test_Intervals/NullInterval[uint]/Vs_Empty (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint]/Vs_Empty/Overlaps (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint]/Vs_Empty/Equals (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint]/Vs_Empty/Union (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint]/Vs_Empty/Intersection (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint]/Vs_Empty/Difference (0.00s)
        --- PASS: Test_Intervals/NullInterval[uint]/Vs_Single (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint]/Vs_Single/Overlaps (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint]/Vs_Single/Equals (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint]/Vs_Single/Union (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint]/Vs_Single/Intersection (0.00s)
            --- PASS: Test_Intervals/NullInterval[uint]/Vs_Single/Difference (0.00s)
        --- PASS: Test_Intervals/NullInterval[uint]/Vs_Merged (0.00s)
    --- PASS: Test_Intervals/SingletonInterval[uint] (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[uint]/0 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint]/0/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/0/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/0/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/0/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/0/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/0/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/0/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/0/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/0/Sanity/Enumerate/Step=18446744073709551615 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/0/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/0/Sanity/Enumerate/Step=18446744073709551614 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/0/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/0/Sanity/Enumerate/Step=18446744073709551613 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/0/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/0/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/0/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/0/Sanity/Contains/18446744073709551615 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/0/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/0/Sanity/Contains/18446744073709551614 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/0/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/0/Sanity/Contains/18446744073709551613 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint]/0/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/0/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/0/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/0/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/0/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/0/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint]/0/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint]/0/Vs_Merged (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[uint]/1 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint]/1/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/1/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/1/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/1/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/1/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/1/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/1/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/1/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/1/Sanity/Enumerate/Step=18446744073709551615 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/1/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/1/Sanity/Enumerate/Step=18446744073709551614 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/1/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/1/Sanity/Enumerate/Step=18446744073709551613 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/1/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/1/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/1/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/1/Sanity/Contains/18446744073709551615 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/1/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/1/Sanity/Contains/18446744073709551614 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/1/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/1/Sanity/Contains/18446744073709551613 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint]/1/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/1/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/1/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/1/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/1/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/1/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint]/1/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint]/1/Vs_Merged (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Enumerate/Step=18446744073709551615 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Enumerate/Step=18446744073709551614 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Enumerate/Step=18446744073709551613 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Contains/18446744073709551615 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Contains/18446744073709551614 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Sanity/Contains/18446744073709551613 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[uint]/18446744073709551613/Vs_Merged (0.00s)
    --- PASS: Test_Intervals/NullInterval[int8] (0.00s)
        --- PASS: Test_Intervals/NullInterval[int8]/Sanity (0.00s)
            --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Min (0.00s)
            --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Max (0.00s)
            --- PASS: Test_Intervals/NullInterval[int8]/Sanity/IsEmpty (0.00s)
            --- PASS: Test_Intervals/NullInterval[int8]/Sanity/IsEmpty_and_IsSingleton (0.00s)
            --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Enumerate (0.00s)
                --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Enumerate/Step=0 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Enumerate/Step=1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Enumerate/Step=-1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Enumerate/Step=2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Enumerate/Step=-2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Enumerate/Step=3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Enumerate/Step=-3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Enumerate/Step=-128 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Enumerate/Step=127 (0.00s)
            --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Contains (0.00s)
                --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Contains/0 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Contains/1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Contains/-1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Contains/2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Contains/-2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Contains/3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Contains/-3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Contains/-128 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int8]/Sanity/Contains/127 (0.00s)
        --- PASS: Test_Intervals/NullInterval[int8]/Vs_Empty (0.00s)
            --- PASS: Test_Intervals/NullInterval[int8]/Vs_Empty/Overlaps (0.00s)
            --- PASS: Test_Intervals/NullInterval[int8]/Vs_Empty/Equals (0.00s)
            --- PASS: Test_Intervals/NullInterval[int8]/Vs_Empty/Union (0.00s)
            --- PASS: Test_Intervals/NullInterval[int8]/Vs_Empty/Intersection (0.00s)
            --- PASS: Test_Intervals/NullInterval[int8]/Vs_Empty/Difference (0.00s)
        --- PASS: Test_Intervals/NullInterval[int8]/Vs_Single (0.00s)
            --- PASS: Test_Intervals/NullInterval[int8]/Vs_Single/Overlaps (0.00s)
            --- PASS: Test_Intervals/NullInterval[int8]/Vs_Single/Equals (0.00s)
            --- PASS: Test_Intervals/NullInterval[int8]/Vs_Single/Union (0.00s)
            --- PASS: Test_Intervals/NullInterval[int8]/Vs_Single/Intersection (0.00s)
            --- PASS: Test_Intervals/NullInterval[int8]/Vs_Single/Difference (0.00s)
        --- PASS: Test_Intervals/NullInterval[int8]/Vs_Merged (0.00s)
    --- PASS: Test_Intervals/SingletonInterval[int8] (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[int8]/0 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int8]/0/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/0/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/0/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/0/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/0/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/0/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/0/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/0/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/0/Sanity/Enumerate/Step=-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/0/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/0/Sanity/Enumerate/Step=-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/0/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/0/Sanity/Enumerate/Step=-3 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/0/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/0/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/0/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/0/Sanity/Contains/-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/0/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/0/Sanity/Contains/-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/0/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/0/Sanity/Contains/-3 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int8]/0/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/0/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/0/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/0/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/0/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/0/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int8]/0/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int8]/0/Vs_Merged (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[int8]/1 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int8]/1/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/1/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/1/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/1/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/1/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/1/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/1/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/1/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/1/Sanity/Enumerate/Step=-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/1/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/1/Sanity/Enumerate/Step=-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/1/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/1/Sanity/Enumerate/Step=-3 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/1/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/1/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/1/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/1/Sanity/Contains/-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/1/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/1/Sanity/Contains/-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/1/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/1/Sanity/Contains/-3 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int8]/1/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/1/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/1/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/1/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/1/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/1/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int8]/1/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int8]/1/Vs_Merged (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[int8]/-3 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Sanity/Enumerate/Step=-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Sanity/Enumerate/Step=-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Sanity/Enumerate/Step=-3 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Sanity/Contains/-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Sanity/Contains/-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Sanity/Contains/-3 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int8]/-3/Vs_Merged (0.00s)
    --- PASS: Test_Intervals/NullInterval[int16] (0.00s)
        --- PASS: Test_Intervals/NullInterval[int16]/Sanity (0.00s)
            --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Min (0.00s)
            --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Max (0.00s)
            --- PASS: Test_Intervals/NullInterval[int16]/Sanity/IsEmpty (0.00s)
            --- PASS: Test_Intervals/NullInterval[int16]/Sanity/IsEmpty_and_IsSingleton (0.00s)
            --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Enumerate (0.00s)
                --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Enumerate/Step=0 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Enumerate/Step=1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Enumerate/Step=-1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Enumerate/Step=2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Enumerate/Step=-2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Enumerate/Step=3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Enumerate/Step=-3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Enumerate/Step=-32768 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Enumerate/Step=32767 (0.00s)
            --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Contains (0.00s)
                --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Contains/0 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Contains/1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Contains/-1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Contains/2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Contains/-2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Contains/3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Contains/-3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Contains/-32768 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int16]/Sanity/Contains/32767 (0.00s)
        --- PASS: Test_Intervals/NullInterval[int16]/Vs_Empty (0.00s)
            --- PASS: Test_Intervals/NullInterval[int16]/Vs_Empty/Overlaps (0.00s)
            --- PASS: Test_Intervals/NullInterval[int16]/Vs_Empty/Equals (0.00s)
            --- PASS: Test_Intervals/NullInterval[int16]/Vs_Empty/Union (0.00s)
            --- PASS: Test_Intervals/NullInterval[int16]/Vs_Empty/Intersection (0.00s)
            --- PASS: Test_Intervals/NullInterval[int16]/Vs_Empty/Difference (0.00s)
        --- PASS: Test_Intervals/NullInterval[int16]/Vs_Single (0.00s)
            --- PASS: Test_Intervals/NullInterval[int16]/Vs_Single/Overlaps (0.00s)
            --- PASS: Test_Intervals/NullInterval[int16]/Vs_Single/Equals (0.00s)
            --- PASS: Test_Intervals/NullInterval[int16]/Vs_Single/Union (0.00s)
            --- PASS: Test_Intervals/NullInterval[int16]/Vs_Single/Intersection (0.00s)
            --- PASS: Test_Intervals/NullInterval[int16]/Vs_Single/Difference (0.00s)
        --- PASS: Test_Intervals/NullInterval[int16]/Vs_Merged (0.00s)
    --- PASS: Test_Intervals/SingletonInterval[int16] (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[int16]/0 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int16]/0/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/0/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/0/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/0/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/0/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/0/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/0/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/0/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/0/Sanity/Enumerate/Step=-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/0/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/0/Sanity/Enumerate/Step=-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/0/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/0/Sanity/Enumerate/Step=-3 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/0/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/0/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/0/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/0/Sanity/Contains/-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/0/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/0/Sanity/Contains/-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/0/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/0/Sanity/Contains/-3 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int16]/0/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/0/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/0/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/0/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/0/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/0/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int16]/0/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int16]/0/Vs_Merged (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[int16]/1 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int16]/1/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/1/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/1/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/1/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/1/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/1/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/1/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/1/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/1/Sanity/Enumerate/Step=-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/1/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/1/Sanity/Enumerate/Step=-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/1/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/1/Sanity/Enumerate/Step=-3 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/1/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/1/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/1/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/1/Sanity/Contains/-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/1/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/1/Sanity/Contains/-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/1/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/1/Sanity/Contains/-3 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int16]/1/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/1/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/1/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/1/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/1/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/1/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int16]/1/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int16]/1/Vs_Merged (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[int16]/-3 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Sanity/Enumerate/Step=-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Sanity/Enumerate/Step=-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Sanity/Enumerate/Step=-3 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Sanity/Contains/-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Sanity/Contains/-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Sanity/Contains/-3 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int16]/-3/Vs_Merged (0.00s)
    --- PASS: Test_Intervals/NullInterval[int32] (0.00s)
        --- PASS: Test_Intervals/NullInterval[int32]/Sanity (0.00s)
            --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Min (0.00s)
            --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Max (0.00s)
            --- PASS: Test_Intervals/NullInterval[int32]/Sanity/IsEmpty (0.00s)
            --- PASS: Test_Intervals/NullInterval[int32]/Sanity/IsEmpty_and_IsSingleton (0.00s)
            --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Enumerate (0.00s)
                --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Enumerate/Step=0 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Enumerate/Step=1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Enumerate/Step=-1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Enumerate/Step=2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Enumerate/Step=-2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Enumerate/Step=3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Enumerate/Step=-3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Enumerate/Step=-2147483648 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Enumerate/Step=2147483647 (0.00s)
            --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Contains (0.00s)
                --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Contains/0 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Contains/1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Contains/-1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Contains/2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Contains/-2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Contains/3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Contains/-3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Contains/-2147483648 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int32]/Sanity/Contains/2147483647 (0.00s)
        --- PASS: Test_Intervals/NullInterval[int32]/Vs_Empty (0.00s)
            --- PASS: Test_Intervals/NullInterval[int32]/Vs_Empty/Overlaps (0.00s)
            --- PASS: Test_Intervals/NullInterval[int32]/Vs_Empty/Equals (0.00s)
            --- PASS: Test_Intervals/NullInterval[int32]/Vs_Empty/Union (0.00s)
            --- PASS: Test_Intervals/NullInterval[int32]/Vs_Empty/Intersection (0.00s)
            --- PASS: Test_Intervals/NullInterval[int32]/Vs_Empty/Difference (0.00s)
        --- PASS: Test_Intervals/NullInterval[int32]/Vs_Single (0.00s)
            --- PASS: Test_Intervals/NullInterval[int32]/Vs_Single/Overlaps (0.00s)
            --- PASS: Test_Intervals/NullInterval[int32]/Vs_Single/Equals (0.00s)
            --- PASS: Test_Intervals/NullInterval[int32]/Vs_Single/Union (0.00s)
            --- PASS: Test_Intervals/NullInterval[int32]/Vs_Single/Intersection (0.00s)
            --- PASS: Test_Intervals/NullInterval[int32]/Vs_Single/Difference (0.00s)
        --- PASS: Test_Intervals/NullInterval[int32]/Vs_Merged (0.00s)
    --- PASS: Test_Intervals/SingletonInterval[int32] (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[int32]/0 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int32]/0/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/0/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/0/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/0/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/0/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/0/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/0/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/0/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/0/Sanity/Enumerate/Step=-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/0/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/0/Sanity/Enumerate/Step=-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/0/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/0/Sanity/Enumerate/Step=-3 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/0/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/0/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/0/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/0/Sanity/Contains/-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/0/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/0/Sanity/Contains/-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/0/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/0/Sanity/Contains/-3 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int32]/0/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/0/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/0/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/0/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/0/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/0/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int32]/0/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int32]/0/Vs_Merged (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[int32]/1 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int32]/1/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/1/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/1/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/1/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/1/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/1/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/1/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/1/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/1/Sanity/Enumerate/Step=-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/1/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/1/Sanity/Enumerate/Step=-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/1/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/1/Sanity/Enumerate/Step=-3 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/1/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/1/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/1/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/1/Sanity/Contains/-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/1/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/1/Sanity/Contains/-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/1/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/1/Sanity/Contains/-3 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int32]/1/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/1/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/1/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/1/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/1/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/1/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int32]/1/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int32]/1/Vs_Merged (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[int32]/-3 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Sanity/Enumerate/Step=-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Sanity/Enumerate/Step=-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Sanity/Enumerate/Step=-3 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Sanity/Contains/-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Sanity/Contains/-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Sanity/Contains/-3 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int32]/-3/Vs_Merged (0.00s)
    --- PASS: Test_Intervals/NullInterval[int64] (0.00s)
        --- PASS: Test_Intervals/NullInterval[int64]/Sanity (0.00s)
            --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Min (0.00s)
            --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Max (0.00s)
            --- PASS: Test_Intervals/NullInterval[int64]/Sanity/IsEmpty (0.00s)
            --- PASS: Test_Intervals/NullInterval[int64]/Sanity/IsEmpty_and_IsSingleton (0.00s)
            --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Enumerate (0.00s)
                --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Enumerate/Step=0 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Enumerate/Step=1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Enumerate/Step=-1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Enumerate/Step=2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Enumerate/Step=-2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Enumerate/Step=3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Enumerate/Step=-3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Enumerate/Step=-9223372036854775808 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Enumerate/Step=9223372036854775807 (0.00s)
            --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Contains (0.00s)
                --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Contains/0 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Contains/1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Contains/-1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Contains/2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Contains/-2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Contains/3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Contains/-3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Contains/-9223372036854775808 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int64]/Sanity/Contains/9223372036854775807 (0.00s)
        --- PASS: Test_Intervals/NullInterval[int64]/Vs_Empty (0.00s)
            --- PASS: Test_Intervals/NullInterval[int64]/Vs_Empty/Overlaps (0.00s)
            --- PASS: Test_Intervals/NullInterval[int64]/Vs_Empty/Equals (0.00s)
            --- PASS: Test_Intervals/NullInterval[int64]/Vs_Empty/Union (0.00s)
            --- PASS: Test_Intervals/NullInterval[int64]/Vs_Empty/Intersection (0.00s)
            --- PASS: Test_Intervals/NullInterval[int64]/Vs_Empty/Difference (0.00s)
        --- PASS: Test_Intervals/NullInterval[int64]/Vs_Single (0.00s)
            --- PASS: Test_Intervals/NullInterval[int64]/Vs_Single/Overlaps (0.00s)
            --- PASS: Test_Intervals/NullInterval[int64]/Vs_Single/Equals (0.00s)
            --- PASS: Test_Intervals/NullInterval[int64]/Vs_Single/Union (0.00s)
            --- PASS: Test_Intervals/NullInterval[int64]/Vs_Single/Intersection (0.00s)
            --- PASS: Test_Intervals/NullInterval[int64]/Vs_Single/Difference (0.00s)
        --- PASS: Test_Intervals/NullInterval[int64]/Vs_Merged (0.00s)
    --- PASS: Test_Intervals/SingletonInterval[int64] (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[int64]/0 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int64]/0/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/0/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/0/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/0/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/0/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/0/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/0/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/0/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/0/Sanity/Enumerate/Step=-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/0/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/0/Sanity/Enumerate/Step=-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/0/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/0/Sanity/Enumerate/Step=-3 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/0/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/0/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/0/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/0/Sanity/Contains/-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/0/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/0/Sanity/Contains/-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/0/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/0/Sanity/Contains/-3 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int64]/0/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/0/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/0/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/0/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/0/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/0/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int64]/0/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int64]/0/Vs_Merged (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[int64]/1 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int64]/1/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/1/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/1/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/1/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/1/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/1/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/1/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/1/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/1/Sanity/Enumerate/Step=-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/1/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/1/Sanity/Enumerate/Step=-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/1/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/1/Sanity/Enumerate/Step=-3 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/1/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/1/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/1/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/1/Sanity/Contains/-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/1/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/1/Sanity/Contains/-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/1/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/1/Sanity/Contains/-3 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int64]/1/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/1/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/1/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/1/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/1/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/1/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int64]/1/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int64]/1/Vs_Merged (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[int64]/-3 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Sanity/Enumerate/Step=-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Sanity/Enumerate/Step=-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Sanity/Enumerate/Step=-3 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Sanity/Contains/-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Sanity/Contains/-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Sanity/Contains/-3 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int64]/-3/Vs_Merged (0.00s)
    --- PASS: Test_Intervals/NullInterval[int] (0.00s)
        --- PASS: Test_Intervals/NullInterval[int]/Sanity (0.00s)
            --- PASS: Test_Intervals/NullInterval[int]/Sanity/Min (0.00s)
            --- PASS: Test_Intervals/NullInterval[int]/Sanity/Max (0.00s)
            --- PASS: Test_Intervals/NullInterval[int]/Sanity/IsEmpty (0.00s)
            --- PASS: Test_Intervals/NullInterval[int]/Sanity/IsEmpty_and_IsSingleton (0.00s)
            --- PASS: Test_Intervals/NullInterval[int]/Sanity/Enumerate (0.00s)
                --- PASS: Test_Intervals/NullInterval[int]/Sanity/Enumerate/Step=0 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int]/Sanity/Enumerate/Step=1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int]/Sanity/Enumerate/Step=-1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int]/Sanity/Enumerate/Step=2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int]/Sanity/Enumerate/Step=-2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int]/Sanity/Enumerate/Step=3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int]/Sanity/Enumerate/Step=-3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int]/Sanity/Enumerate/Step=-9223372036854775808 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int]/Sanity/Enumerate/Step=9223372036854775807 (0.00s)
            --- PASS: Test_Intervals/NullInterval[int]/Sanity/Contains (0.00s)
                --- PASS: Test_Intervals/NullInterval[int]/Sanity/Contains/0 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int]/Sanity/Contains/1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int]/Sanity/Contains/-1 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int]/Sanity/Contains/2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int]/Sanity/Contains/-2 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int]/Sanity/Contains/3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int]/Sanity/Contains/-3 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int]/Sanity/Contains/-9223372036854775808 (0.00s)
                --- PASS: Test_Intervals/NullInterval[int]/Sanity/Contains/9223372036854775807 (0.00s)
        --- PASS: Test_Intervals/NullInterval[int]/Vs_Empty (0.00s)
            --- PASS: Test_Intervals/NullInterval[int]/Vs_Empty/Overlaps (0.00s)
            --- PASS: Test_Intervals/NullInterval[int]/Vs_Empty/Equals (0.00s)
            --- PASS: Test_Intervals/NullInterval[int]/Vs_Empty/Union (0.00s)
            --- PASS: Test_Intervals/NullInterval[int]/Vs_Empty/Intersection (0.00s)
            --- PASS: Test_Intervals/NullInterval[int]/Vs_Empty/Difference (0.00s)
        --- PASS: Test_Intervals/NullInterval[int]/Vs_Single (0.00s)
            --- PASS: Test_Intervals/NullInterval[int]/Vs_Single/Overlaps (0.00s)
            --- PASS: Test_Intervals/NullInterval[int]/Vs_Single/Equals (0.00s)
            --- PASS: Test_Intervals/NullInterval[int]/Vs_Single/Union (0.00s)
            --- PASS: Test_Intervals/NullInterval[int]/Vs_Single/Intersection (0.00s)
            --- PASS: Test_Intervals/NullInterval[int]/Vs_Single/Difference (0.00s)
        --- PASS: Test_Intervals/NullInterval[int]/Vs_Merged (0.00s)
    --- PASS: Test_Intervals/SingletonInterval[int] (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[int]/0 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int]/0/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/0/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/0/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/0/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/0/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/0/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/0/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/0/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/0/Sanity/Enumerate/Step=-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/0/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/0/Sanity/Enumerate/Step=-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/0/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/0/Sanity/Enumerate/Step=-3 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/0/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/0/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/0/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/0/Sanity/Contains/-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/0/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/0/Sanity/Contains/-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/0/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/0/Sanity/Contains/-3 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int]/0/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/0/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/0/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/0/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/0/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/0/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int]/0/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int]/0/Vs_Merged (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[int]/1 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int]/1/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/1/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/1/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/1/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/1/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/1/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/1/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/1/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/1/Sanity/Enumerate/Step=-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/1/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/1/Sanity/Enumerate/Step=-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/1/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/1/Sanity/Enumerate/Step=-3 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/1/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/1/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/1/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/1/Sanity/Contains/-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/1/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/1/Sanity/Contains/-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/1/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/1/Sanity/Contains/-3 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int]/1/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/1/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/1/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/1/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/1/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/1/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int]/1/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int]/1/Vs_Merged (0.00s)
        --- PASS: Test_Intervals/SingletonInterval[int]/-3 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int]/-3/Sanity (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/-3/Sanity/Min (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/-3/Sanity/Max (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/-3/Sanity/IsEmpty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/-3/Sanity/IsEmpty_and_IsSingleton (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/-3/Sanity/Enumerate (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/-3/Sanity/Enumerate/Step=0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/-3/Sanity/Enumerate/Step=1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/-3/Sanity/Enumerate/Step=-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/-3/Sanity/Enumerate/Step=2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/-3/Sanity/Enumerate/Step=-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/-3/Sanity/Enumerate/Step=3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/-3/Sanity/Enumerate/Step=-3 (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/-3/Sanity/Contains (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/-3/Sanity/Contains/0 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/-3/Sanity/Contains/1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/-3/Sanity/Contains/-1 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/-3/Sanity/Contains/2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/-3/Sanity/Contains/-2 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/-3/Sanity/Contains/3 (0.00s)
                    --- PASS: Test_Intervals/SingletonInterval[int]/-3/Sanity/Contains/-3 (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int]/-3/Vs_Empty (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/-3/Vs_Empty/Overlaps (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/-3/Vs_Empty/Equals (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/-3/Vs_Empty/Union (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/-3/Vs_Empty/Intersection (0.00s)
                --- PASS: Test_Intervals/SingletonInterval[int]/-3/Vs_Empty/Difference (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int]/-3/Vs_Single (0.00s)
            --- PASS: Test_Intervals/SingletonInterval[int]/-3/Vs_Merged (0.00s)
PASS
ok  	github.com/relvox/iridescence_go/maths/integer/intervals/test	4.601s
=== RUN   Test_Abs
=== RUN   Test_Abs/uint
=== RUN   Test_Abs/uint8
=== RUN   Test_Abs/uint16
=== RUN   Test_Abs/uint32
=== RUN   Test_Abs/uint64
=== RUN   Test_Abs/int
=== RUN   Test_Abs/int8
=== RUN   Test_Abs/int16
=== RUN   Test_Abs/int32
=== RUN   Test_Abs/int64
=== RUN   Test_Abs/float32
=== RUN   Test_Abs/float64
--- PASS: Test_Abs (0.00s)
    --- PASS: Test_Abs/uint (0.00s)
    --- PASS: Test_Abs/uint8 (0.00s)
    --- PASS: Test_Abs/uint16 (0.00s)
    --- PASS: Test_Abs/uint32 (0.00s)
    --- PASS: Test_Abs/uint64 (0.00s)
    --- PASS: Test_Abs/int (0.00s)
    --- PASS: Test_Abs/int8 (0.00s)
    --- PASS: Test_Abs/int16 (0.00s)
    --- PASS: Test_Abs/int32 (0.00s)
    --- PASS: Test_Abs/int64 (0.00s)
    --- PASS: Test_Abs/float32 (0.00s)
    --- PASS: Test_Abs/float64 (0.00s)
=== RUN   Test_GeometricMean
=== RUN   Test_GeometricMean/uint
=== RUN   Test_GeometricMean/uint8
=== RUN   Test_GeometricMean/uint16
=== RUN   Test_GeometricMean/uint32
=== RUN   Test_GeometricMean/uint64
=== RUN   Test_GeometricMean/int
=== RUN   Test_GeometricMean/int8
=== RUN   Test_GeometricMean/int16
=== RUN   Test_GeometricMean/int32
=== RUN   Test_GeometricMean/int64
=== RUN   Test_GeometricMean/float32
=== RUN   Test_GeometricMean/float64
--- PASS: Test_GeometricMean (0.00s)
    --- PASS: Test_GeometricMean/uint (0.00s)
    --- PASS: Test_GeometricMean/uint8 (0.00s)
    --- PASS: Test_GeometricMean/uint16 (0.00s)
    --- PASS: Test_GeometricMean/uint32 (0.00s)
    --- PASS: Test_GeometricMean/uint64 (0.00s)
    --- PASS: Test_GeometricMean/int (0.00s)
    --- PASS: Test_GeometricMean/int8 (0.00s)
    --- PASS: Test_GeometricMean/int16 (0.00s)
    --- PASS: Test_GeometricMean/int32 (0.00s)
    --- PASS: Test_GeometricMean/int64 (0.00s)
    --- PASS: Test_GeometricMean/float32 (0.00s)
    --- PASS: Test_GeometricMean/float64 (0.00s)
=== RUN   Test_MinMax
=== RUN   Test_MinMax/uint
=== RUN   Test_MinMax/uint8
=== RUN   Test_MinMax/uint16
=== RUN   Test_MinMax/uint32
=== RUN   Test_MinMax/uint64
=== RUN   Test_MinMax/int
=== RUN   Test_MinMax/int8
=== RUN   Test_MinMax/int16
=== RUN   Test_MinMax/int32
=== RUN   Test_MinMax/int64
=== RUN   Test_MinMax/float32
=== RUN   Test_MinMax/float64
--- PASS: Test_MinMax (0.00s)
    --- PASS: Test_MinMax/uint (0.00s)
    --- PASS: Test_MinMax/uint8 (0.00s)
    --- PASS: Test_MinMax/uint16 (0.00s)
    --- PASS: Test_MinMax/uint32 (0.00s)
    --- PASS: Test_MinMax/uint64 (0.00s)
    --- PASS: Test_MinMax/int (0.00s)
    --- PASS: Test_MinMax/int8 (0.00s)
    --- PASS: Test_MinMax/int16 (0.00s)
    --- PASS: Test_MinMax/int32 (0.00s)
    --- PASS: Test_MinMax/int64 (0.00s)
    --- PASS: Test_MinMax/float32 (0.00s)
    --- PASS: Test_MinMax/float64 (0.00s)
=== RUN   Test_Sign
=== RUN   Test_Sign/uint
=== RUN   Test_Sign/uint8
=== RUN   Test_Sign/uint16
=== RUN   Test_Sign/uint32
=== RUN   Test_Sign/uint64
=== RUN   Test_Sign/int
=== RUN   Test_Sign/int8
=== RUN   Test_Sign/int16
=== RUN   Test_Sign/int32
=== RUN   Test_Sign/int64
=== RUN   Test_Sign/float32
=== RUN   Test_Sign/float64
--- PASS: Test_Sign (0.00s)
    --- PASS: Test_Sign/uint (0.00s)
    --- PASS: Test_Sign/uint8 (0.00s)
    --- PASS: Test_Sign/uint16 (0.00s)
    --- PASS: Test_Sign/uint32 (0.00s)
    --- PASS: Test_Sign/uint64 (0.00s)
    --- PASS: Test_Sign/int (0.00s)
    --- PASS: Test_Sign/int8 (0.00s)
    --- PASS: Test_Sign/int16 (0.00s)
    --- PASS: Test_Sign/int32 (0.00s)
    --- PASS: Test_Sign/int64 (0.00s)
    --- PASS: Test_Sign/float32 (0.00s)
    --- PASS: Test_Sign/float64 (0.00s)
=== RUN   Test_Sum
=== RUN   Test_Sum/uint
=== RUN   Test_Sum/uint8
=== RUN   Test_Sum/uint16
=== RUN   Test_Sum/uint32
=== RUN   Test_Sum/uint64
=== RUN   Test_Sum/int
=== RUN   Test_Sum/int8
=== RUN   Test_Sum/int16
=== RUN   Test_Sum/int32
=== RUN   Test_Sum/int64
=== RUN   Test_Sum/float32
=== RUN   Test_Sum/float64
--- PASS: Test_Sum (0.00s)
    --- PASS: Test_Sum/uint (0.00s)
    --- PASS: Test_Sum/uint8 (0.00s)
    --- PASS: Test_Sum/uint16 (0.00s)
    --- PASS: Test_Sum/uint32 (0.00s)
    --- PASS: Test_Sum/uint64 (0.00s)
    --- PASS: Test_Sum/int (0.00s)
    --- PASS: Test_Sum/int8 (0.00s)
    --- PASS: Test_Sum/int16 (0.00s)
    --- PASS: Test_Sum/int32 (0.00s)
    --- PASS: Test_Sum/int64 (0.00s)
    --- PASS: Test_Sum/float32 (0.00s)
    --- PASS: Test_Sum/float64 (0.00s)
=== RUN   Test_XenoSum
=== RUN   Test_XenoSum/uint
=== RUN   Test_XenoSum/uint8
=== RUN   Test_XenoSum/uint16
=== RUN   Test_XenoSum/uint32
=== RUN   Test_XenoSum/uint64
=== RUN   Test_XenoSum/int
=== RUN   Test_XenoSum/int8
=== RUN   Test_XenoSum/int16
=== RUN   Test_XenoSum/int32
=== RUN   Test_XenoSum/int64
=== RUN   Test_XenoSum/float32
=== RUN   Test_XenoSum/float64
--- PASS: Test_XenoSum (0.00s)
    --- PASS: Test_XenoSum/uint (0.00s)
    --- PASS: Test_XenoSum/uint8 (0.00s)
    --- PASS: Test_XenoSum/uint16 (0.00s)
    --- PASS: Test_XenoSum/uint32 (0.00s)
    --- PASS: Test_XenoSum/uint64 (0.00s)
    --- PASS: Test_XenoSum/int (0.00s)
    --- PASS: Test_XenoSum/int8 (0.00s)
    --- PASS: Test_XenoSum/int16 (0.00s)
    --- PASS: Test_XenoSum/int32 (0.00s)
    --- PASS: Test_XenoSum/int64 (0.00s)
    --- PASS: Test_XenoSum/float32 (0.00s)
    --- PASS: Test_XenoSum/float64 (0.00s)
PASS
ok  	github.com/relvox/iridescence_go/maths/test_gen	(cached)
=== RUN   Test
--- PASS: Test (0.00s)
PASS
ok  	github.com/relvox/iridescence_go/queues	(cached)
=== RUN   TestRange
=== RUN   TestRange/Normal_Case
=== RUN   TestRange/Minimum_Edge_Case
=== RUN   TestRange/Maximum_Edge_Case
=== RUN   TestRange/Below_Range
=== RUN   TestRange/Above_Range
=== RUN   TestRange/Uint32_Max_Value
=== RUN   TestRange/Uint32_Min_Value
=== RUN   TestRange/Overflow_Case_1
=== RUN   TestRange/Overflow_Case_2
=== RUN   TestRange/Overflow_Case_3
=== RUN   TestRange/Overflow_Case_4
=== RUN   TestRange/Match_with_Min_Equal_to_Max
=== RUN   TestRange/Mismatch_with_Min_Equal_to_Max
--- PASS: TestRange (0.00s)
    --- PASS: TestRange/Normal_Case (0.00s)
    --- PASS: TestRange/Minimum_Edge_Case (0.00s)
    --- PASS: TestRange/Maximum_Edge_Case (0.00s)
    --- PASS: TestRange/Below_Range (0.00s)
    --- PASS: TestRange/Above_Range (0.00s)
    --- PASS: TestRange/Uint32_Max_Value (0.00s)
    --- PASS: TestRange/Uint32_Min_Value (0.00s)
    --- PASS: TestRange/Overflow_Case_1 (0.00s)
    --- PASS: TestRange/Overflow_Case_2 (0.00s)
    --- PASS: TestRange/Overflow_Case_3 (0.00s)
    --- PASS: TestRange/Overflow_Case_4 (0.00s)
    --- PASS: TestRange/Match_with_Min_Equal_to_Max (0.00s)
    --- PASS: TestRange/Mismatch_with_Min_Equal_to_Max (0.00s)
PASS
ok  	github.com/relvox/iridescence_go/random	(cached)
=== RUN   Test_GetBucket
=== RUN   Test_GetBucket/Normal_range
=== RUN   Test_GetBucket/Edge_cases
=== RUN   Test_GetBucket/Invalid_inputs
=== RUN   Test_GetBucket/Special_values
--- PASS: Test_GetBucket (0.00s)
    --- PASS: Test_GetBucket/Normal_range (0.00s)
    --- PASS: Test_GetBucket/Edge_cases (0.00s)
    --- PASS: Test_GetBucket/Invalid_inputs (0.00s)
    --- PASS: Test_GetBucket/Special_values (0.00s)
=== RUN   Test_Rands
=== RUN   Test_Rands/go_src_Int63
=== RUN   Test_Rands/go_rnd_Uint32
=== RUN   Test_Rands/go_wrap_Int63
=== RUN   Test_Rands/go_wrap_Uint32
=== RUN   Test_Rands/my_src_Int63
=== RUN   Test_Rands/my_src_Uint32
--- PASS: Test_Rands (23.77s)
    --- PASS: Test_Rands/go_src_Int63 (4.09s)
    --- PASS: Test_Rands/go_rnd_Uint32 (3.84s)
    --- PASS: Test_Rands/go_wrap_Int63 (3.85s)
    --- PASS: Test_Rands/go_wrap_Uint32 (3.88s)
    --- PASS: Test_Rands/my_src_Int63 (4.16s)
    --- PASS: Test_Rands/my_src_Uint32 (3.95s)
PASS
ok  	github.com/relvox/iridescence_go/random/sources	24.213s
=== RUN   TestUnion
=== RUN   TestUnion/Set
=== RUN   TestUnion/Elements
--- PASS: TestUnion (1.55s)
    --- PASS: TestUnion/Set (0.60s)
    --- PASS: TestUnion/Elements (0.60s)
=== RUN   TestIntersection
=== RUN   TestIntersection/Set
=== RUN   TestIntersection/Elements
--- PASS: TestIntersection (0.81s)
    --- PASS: TestIntersection/Set (0.29s)
    --- PASS: TestIntersection/Elements (0.23s)
=== RUN   TestDifference
=== RUN   TestDifference/Set
=== RUN   TestDifference/Elements
--- PASS: TestDifference (0.89s)
    --- PASS: TestDifference/Set (0.33s)
    --- PASS: TestDifference/Elements (0.28s)
PASS
ok  	github.com/relvox/iridescence_go/sets	(cached)
=== RUN   TestDict
--- PASS: TestDict (0.00s)
=== RUN   TestDictOddArgs
--- PASS: TestDictOddArgs (0.00s)
=== RUN   TestDictNonStringKey
--- PASS: TestDictNonStringKey (0.00s)
=== RUN   TestContainsKeyFunc
=== RUN   TestContainsKeyFunc/Key_Exists
=== RUN   TestContainsKeyFunc/Key_Does_Not_Exist
=== RUN   TestContainsKeyFunc/Invalid_Map_Type
--- PASS: TestContainsKeyFunc (0.00s)
    --- PASS: TestContainsKeyFunc/Key_Exists (0.00s)
    --- PASS: TestContainsKeyFunc/Key_Does_Not_Exist (0.00s)
    --- PASS: TestContainsKeyFunc/Invalid_Map_Type (0.00s)
PASS
ok  	github.com/relvox/iridescence_go/templates/funcs	(cached)
=== RUN   TestBitFlagComplexScenario
--- PASS: TestBitFlagComplexScenario (0.00s)
=== RUN   TestBitFlagHas
--- PASS: TestBitFlagHas (0.00s)
=== RUN   TestBitFlagSetVariadic
--- PASS: TestBitFlagSetVariadic (0.00s)
=== RUN   TestBitFlagClearVariadic
--- PASS: TestBitFlagClearVariadic (0.00s)
=== RUN   TestBitFlagToggleVariadic
--- PASS: TestBitFlagToggleVariadic (0.00s)
=== RUN   TestBitFlagHasVariadic
--- PASS: TestBitFlagHasVariadic (0.00s)
=== RUN   TestBitFlagSet
--- PASS: TestBitFlagSet (0.00s)
=== RUN   TestBitFlagSetMany
--- PASS: TestBitFlagSetMany (0.00s)
=== RUN   TestBitFlagGet
--- PASS: TestBitFlagGet (0.00s)
=== RUN   TestBitFlagGetMany
--- PASS: TestBitFlagGetMany (0.00s)
=== RUN   TestBitFlagClear
--- PASS: TestBitFlagClear (0.00s)
=== RUN   TestBitFlagClearMany
--- PASS: TestBitFlagClearMany (0.00s)
=== RUN   TestBitFlagToggle
--- PASS: TestBitFlagToggle (0.00s)
=== RUN   TestBitFlagToggleMany
--- PASS: TestBitFlagToggleMany (0.00s)
=== RUN   TestBitFlagTest
--- PASS: TestBitFlagTest (0.00s)
=== RUN   TestBitFlagTestAny
--- PASS: TestBitFlagTestAny (0.00s)
=== RUN   TestBitFlagTestAll
--- PASS: TestBitFlagTestAll (0.00s)
=== RUN   TestBitFlagCleared
--- PASS: TestBitFlagCleared (0.00s)
=== RUN   TestBitFlagClearedAny
--- PASS: TestBitFlagClearedAny (0.00s)
=== RUN   TestBitFlagClearedAll
--- PASS: TestBitFlagClearedAll (0.00s)
=== RUN   Test_MergeMaps
=== RUN   Test_MergeMaps/10_keys
=== RUN   Test_MergeMaps/100_keys
=== RUN   Test_MergeMaps/1000_keys
=== RUN   Test_MergeMaps/10000_keys
=== RUN   Test_MergeMaps/100000_keys
=== RUN   Test_MergeMaps/1000000_keys
--- PASS: Test_MergeMaps (1.08s)
    --- PASS: Test_MergeMaps/10_keys (0.00s)
    --- PASS: Test_MergeMaps/100_keys (0.00s)
    --- PASS: Test_MergeMaps/1000_keys (0.00s)
    --- PASS: Test_MergeMaps/10000_keys (0.01s)
    --- PASS: Test_MergeMaps/100000_keys (0.08s)
    --- PASS: Test_MergeMaps/1000000_keys (1.00s)
=== RUN   Test_MapToStruct
=== RUN   Test_MapToStruct/small_map
=== RUN   Test_MapToStruct/big_map_100
=== RUN   Test_MapToStruct/big_map_1000
=== RUN   Test_MapToStruct/big_map_10000
=== RUN   Test_MapToStruct/big_map_100000
=== RUN   Test_MapToStruct/big_map_1000000
--- PASS: Test_MapToStruct (6.89s)
    --- PASS: Test_MapToStruct/small_map (0.00s)
    --- PASS: Test_MapToStruct/big_map_100 (0.00s)
    --- PASS: Test_MapToStruct/big_map_1000 (0.00s)
    --- PASS: Test_MapToStruct/big_map_10000 (0.03s)
    --- PASS: Test_MapToStruct/big_map_100000 (0.65s)
    --- PASS: Test_MapToStruct/big_map_1000000 (6.21s)
=== RUN   Test_StructToMap
=== RUN   Test_StructToMap/small_entity
=== RUN   Test_StructToMap/big_entity_100
=== RUN   Test_StructToMap/big_entity_1000
=== RUN   Test_StructToMap/big_entity_10000
=== RUN   Test_StructToMap/big_entity_100000
=== RUN   Test_StructToMap/big_entity_1000000
--- PASS: Test_StructToMap (6.92s)
    --- PASS: Test_StructToMap/small_entity (0.00s)
    --- PASS: Test_StructToMap/big_entity_100 (0.00s)
    --- PASS: Test_StructToMap/big_entity_1000 (0.00s)
    --- PASS: Test_StructToMap/big_entity_10000 (0.02s)
    --- PASS: Test_StructToMap/big_entity_100000 (0.52s)
    --- PASS: Test_StructToMap/big_entity_1000000 (6.37s)
=== RUN   Test_Intersect
=== RUN   Test_Intersect/0
=== RUN   Test_Intersect/1
=== RUN   Test_Intersect/2
--- PASS: Test_Intersect (0.00s)
    --- PASS: Test_Intersect/0 (0.00s)
    --- PASS: Test_Intersect/1 (0.00s)
    --- PASS: Test_Intersect/2 (0.00s)
=== RUN   TestCrop
=== RUN   TestCrop/Remove_first_element
=== RUN   TestCrop/Remove_middle_element
=== RUN   TestCrop/Remove_last_element
=== RUN   TestCrop/Index_out_of_range_(negative)
=== RUN   TestCrop/Index_out_of_range_(too_large)
=== RUN   TestCrop/Empty_slice
=== RUN   TestCrop/Single_element_slice,_valid_index
=== RUN   TestCrop/Single_element_slice,_invalid_index
--- PASS: TestCrop (0.00s)
    --- PASS: TestCrop/Remove_first_element (0.00s)
    --- PASS: TestCrop/Remove_middle_element (0.00s)
    --- PASS: TestCrop/Remove_last_element (0.00s)
    --- PASS: TestCrop/Index_out_of_range_(negative) (0.00s)
    --- PASS: TestCrop/Index_out_of_range_(too_large) (0.00s)
    --- PASS: TestCrop/Empty_slice (0.00s)
    --- PASS: TestCrop/Single_element_slice,_valid_index (0.00s)
    --- PASS: TestCrop/Single_element_slice,_invalid_index (0.00s)
PASS
ok  	github.com/relvox/iridescence_go/utils	(cached)
